{"version":3,"file":"index.esm.js","sources":["../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js","../node_modules/style-inject/dist/style-inject.es.js","../src/components/styles.js","../src/icons/trash.js","../src/icons/edit.js","../src/icons/testIcon.js","../src/icons/drag.js","../src/icons/move_up.js","../src/icons/move_down.js","../src/components/actions.js","../src/components/Clause/index.js","../src/ContractEditor/plugins/withClauseSchema.js","../src/utilities/inVariable.js","../src/utilities/variableDecorators.js","../src/components/Variable/index.js","../src/icons/conditional.js","../src/components/Conditional/ConditionalBoolean.js","../src/components/Conditional/ConditionalSwitch.js","../src/components/Conditional/index.js","../src/components/Optional/OptionalBoolean.js","../src/components/Optional/OptionalSwitch.js","../src/components/Optional/index.js","../src/components/Formula/index.js","../src/utilities/getChildren.js","../src/ContractEditor/plugins/withClauses.js","../src/ContractEditor/plugins/withVariables.js","../src/ContractEditor/index.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nmodule.exports = _taggedTemplateLiteral;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import styled from 'styled-components';\nimport './index.css';\n\nexport const ClauseWrapper = styled.div`\n  position: relative;\n  margin: 10px -10px;\n  display: grid;\n  background-color: #F4F6FC;\n  border: ${props => (props.error ? '1px solid #FF0000' : '1px solid #19C6C7')};\n  border-radius: 3px;\n  grid-template-columns: 10px 375px 1fr 25px 25px 25px 10px;\n  grid-template-rows: 0px 10px 1fr;\n  grid-template-areas: \"one two three four five six seven\"\n                       \"eight nine ten eleven twelve thirteen fourteen\"\n                       \"fifteen sixteen seventeen eighteen nineteen twenty twentyone\";\n`;\n\nexport const ListIcon = styled.svg`\n  visibility: ${props => (props.currentHover ? 'visible' : 'hidden')};\n`;\n\nexport const ClauseConditional = styled.svg`\n  visibility: ${props => (props.currentHover ? 'visible' : 'hidden')};\n`;\n\nexport const ClauseConditionalTooltip = styled.span`\n  visibility: ${props => (props.currentHover ? 'visible' : 'hidden')};\n  margin-top: -${props => props.tooltipHeight}em;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: ${props => props.caretTop}px;\n    left: ${props => props.caretLeft - 1}px;\n    border-top: 5px solid #141F3C;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: ${props => props.caretTop}px;\n    left: ${props => props.caretLeft}px;\n    border-top: 4px solid #141F3C;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n  }\n`;\n\nexport const ClauseOptional = styled.svg`\n  visibility: ${props => (props.currentHover ? 'visible' : 'hidden')};\n`;\n\nexport const ClauseOptionalTooltip = styled.span`\n  visibility: ${props => (props.currentHover ? 'visible' : 'hidden')};\n  margin-top: -${props => props.tooltipHeight}em;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: ${props => props.caretTop}px;\n    left: ${props => props.caretLeft - 1}px;\n    border-top: 5px solid #141F3C;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: ${props => props.caretTop}px;\n    left: ${props => props.caretLeft}px;\n    border-top: 4px solid #141F3C;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n  }\n`;\n\nexport const ClauseHeader = styled.div`\n  visibility: ${props => (props.currentHover ? 'visible' : 'hidden')};\n  font-family: serif;\n  grid-area: two / two / ten / ten;\n  transition-duration: 0.5s;\n  background: linear-gradient(180deg, #FFFFFF 0%, #F4F6FC 100%);\n  align-self: center;\n  justify-self: start;\n  margin-bottom: 9px;\n  padding: 3px;\n  color: #696969;\n  line-height: 14px;\n  font-size: 0.87em;\n  font-weight: 600;\n`;\n\nexport const ClauseBody = styled.div`\n  li {\n    transition: none;\n  }\n  font-family: serif;\n  grid-area: sixteen / sixteen / twenty / twenty;\n  margin: 2px 0 10px;\n  color: #141F3C;\n  font-size: 1em;\n  line-height: 22px;\n`;\n\nexport const ClauseIcon = styled.svg`\n  position: relative;\n  z-index: 1;\n  cursor: pointer;\n  fill: ${props => (props.hovering ? props.clauseIconColor || '#19C6C7' : '#696969')};\n`;\n\nexport const DragIcon = styled(ClauseIcon)`\n  fill: #949CA2;\n  position: relative;\n  top: ${props => (props.position ?? -6)}px;\n  &:hover {\n    fill: #414F58;\n  }\n`;\n\nconst IconWrapper = styled.div`\n  visibility: ${props => (props.currentHover ? 'visible' : 'hidden')};\n  background: linear-gradient(180deg, #FFF 0%, #F4F6FC 100%);\n  position: relative;\n  z-index: 1;\n  margin-bottom: 9px;\n  padding: 4px;\n  place-self: center;\n  transition-duration: 0.5s;\n  cursor: pointer;\n`;\n\nexport const TestWrapper = styled(IconWrapper)`\n  grid-area: four / four / eleven / eleven;\n`;\n\nexport const EditWrapper = styled(IconWrapper)`\n  grid-area: five / five / twelve / twelve;\n`;\n\nexport const DeleteWrapper = styled(IconWrapper)`\n  grid-area: six / six / thirteen / thirteen;\n`;\n\nexport const DragWrapper = styled(IconWrapper)`\n  grid-area: fifteen;\n  background: linear-gradient(to right, #FFF 0%, #F4F6FC 100%);\n  margin-right: 9px;\n  margin-bottom: 0px;\n  position: relative;\n  top: -5px;\n  max-height: 50px;\n  padding: 4px 0 0 0;\n  cursor: text;\n`;\n\nexport const ClauseAdd = styled.svg`\n  fill: #46608E;\n  cursor: pointer;\n  grid-area: editIcon;\n  place-self: center;\n\n  &:hover {\n    fill: #FFFFFF;\n  }\n`;\n\n\nexport const HeaderToolTipWrapper = styled.div`\n  position: absolute;\n  top: -40px;\n  z-index: 99;\n`;\n\nexport const HeaderToolTip = styled.div.attrs({\n  contentEditable: 'false',\n  suppressContentEditableWarning: 'true'\n})`\n  background-color: #121212;\n  padding: 10px;\n  border-radius: 3px;\n  color: #f0f0f0;\n  z-index: 99;\n  font-family: 'IBM Plex Sans', 'sans-serif';\n  transition: all 0.3s ease;\n  :after {\n    content: \" \";\n    display: block;\n    width: 0;\n    height: 0;\n    z-index: 99;\n    position: absolute;\n    top: 100%;\n    left: 5px;\n    border-radius: 0px;\n    border-width: 6px;\n    border-style: solid;\n    border-color: #121212 transparent transparent transparent;\n  }\n`;\n\nexport const HeaderToolTipText = styled.span`\n`;\n","import React from 'react';\n\nexport const type = () => 'trash';\n\nexport const icon = () => (\n    <g stroke=\"none\" strokeWidth=\"1\" fillRule=\"evenodd\">\n        <g transform=\"translate(-222.000000, -602.000000)\" fillRule=\"nonzero\">\n            <path d=\"M233.913531,604.599251 C234.037294,605.044944 234.082298,605 233.669757,604.996255 L222.328624,604.996255 C221.916083,604.996255 221.964838,605.044944 222.08485,604.599251 C222.178609,604.265918 222.223614,604.11236 222.223614,604.11236 C222.321123,603.764045 222.583649,603.730337 222.947436,603.670412 L224.942635,603.419476 C225.19016,603.374532 225.19016,603.374532 225.28767,603.164794 C225.613952,602.426966 225.711462,602 226.067748,602 L229.930633,602 C230.286919,602 230.388179,602.426966 230.714462,603.161049 C230.811971,603.374532 230.811971,603.374532 231.059496,603.41573 L233.050945,603.666667 C233.418482,603.726592 233.666007,603.726592 233.763516,604.074906 C233.763516,604.074906 233.823522,604.262172 233.913531,604.599251 Z M232.684263,606.808989 C233.306825,606.808989 233.336828,606.88764 233.299324,607.359551 L232.598004,616.445693 C232.537998,616.906367 232.492993,617 231.941688,617 L224.170912,617 C223.619607,617 223.574603,616.906367 223.514597,616.445693 L222.813277,607.359551 C222.775773,606.891386 222.805776,606.808989 223.428338,606.808989 L232.684263,606.808989 Z\"></path>\n        </g>\n    </g>\n);\n","import React from 'react';\n\nexport const type = () => 'edit';\n\nexport const icon = () => (\n    <g id=\"Side-nav-+-new-editor\" stroke=\"none\" strokeWidth=\"1\" fillRule=\"evenodd\">\n        <path d=\"M0.0346241458,14.256492 L0,18.1690205 C0,18.3767654 0.0692482916,18.6191344 0.242369021,18.757631 C0.415489749,18.8961276 0.623234624,19 0.830979499,19 L4.74350797,18.9653759 C4.95125285,18.9653759 5.15899772,18.8615034 5.33211845,18.7230068 L18.766287,5.28883827 C19.0779043,4.97722096 19.0779043,4.42323462 18.766287,4.11161731 L14.8883827,0.233712984 C14.5767654,-0.077904328 14.022779,-0.077904328 13.7111617,0.233712984 L11.0104784,2.93439636 L0.276993166,13.6678815 C0.103872437,13.8410023 0.0346241458,14.0487472 0.0346241458,14.256492 Z M17.0004556,4.70022779 L15.4769932,6.22369021 L12.7763098,3.52300683 L14.2997722,1.99954442 L17.0004556,4.70022779 L17.0004556,4.70022779 Z M1.69658314,14.6027335 L11.5990888,4.70022779 L14.2997722,7.40091116 L4.39726651,17.3034169 L1.69658314,17.3034169 L1.69658314,14.6027335 Z\" id=\"Shape-Copy\" fillRule=\"nonzero\"></path>\n    </g>\n);\n","import React from 'react';\n\nexport const type = () => 'test';\n\nexport const icon = () => (\n    <g id=\"Side-nav-+-new-editor\" stroke=\"none\" strokeWidth=\"1\" fillRule=\"evenodd\">\n        <g id=\"Lab-Flask-Experiment-2-Copy\" fillRule=\"nonzero\">\n            <path d=\"M15.0833265,16.0833269 L11.4166613,10 C11.333328,9.8333294 11.333328,9.6666628 11.333328,9.5833295 L11.333328,2.0833325 C11.333328,1.8333326 11.4999946,1.666666 11.7499945,1.666666 L12.999994,1.666666 C13.4999938,1.666666 13.833327,1.3333328 13.833327,0.833333 C13.833327,0.3333332 13.4999938,0 12.999994,0 L2.999998,0 C2.4999982,0 2.166665,0.3333332 2.166665,0.833333 C2.166665,1.3333328 2.4999982,1.666666 2.999998,1.666666 L4.2499975,1.666666 C4.4999974,1.666666 4.666664,1.8333326 4.666664,2.0833325 L4.666664,9.5833295 C4.666664,9.7499961 4.666664,9.9166627 4.5833307,10 L0.9999988,16.0833269 C0.2499991,17.2499931 0.499999,18.7499925 1.5833319,19.5833255 C1.9999984,19.8333254 2.4999982,20 2.999998,20 L12.999994,20 C14.4166601,20 15.499993,18.8333258 15.499993,17.5 C15.499993,17 15.3333264,16.5 15.0833265,16.0833269 Z M5.2499971,13.333328 C4.9999972,13.333328 4.8333306,13.166666 4.8333306,12.9166615 C4.8333306,12.8333282 4.8333306,12.7499949 4.9166639,12.666666 L6.2499967,10.4166625 C6.3333306,10.3333292 6.3333306,10.166666 6.3333306,9.999996 L6.3333306,2.0833325 C6.3333306,1.8333326 6.4999966,1.666666 6.7499965,1.666666 L9.2499955,1.666666 C9.4999954,1.666666 9.666662,1.8333326 9.666662,2.0833325 L9.666662,9.999996 C9.666662,10.166666 9.666662,10.3333292 9.7499953,10.4166625 L11.0833281,12.666666 C11.1666614,12.8333282 11.1666614,13.0833281 10.9166615,13.2499947 C10.8333306,13.2499947 10.7499949,13.333328 10.6666616,13.333328 L5.2499971,13.333328 L5.2499971,13.333328 Z\" id=\"Shape\"></path>\n        </g>\n    </g>\n);\n","import React from 'react';\n\nexport const type = () => 'drag';\n\nexport const icon = () => (\n    <g id=\"Side-nav-+-new-editor\" stroke=\"none\" strokeWidth=\"1\" fillRule=\"evenodd\">\n        <g id=\"Drag-and-drop\" transform=\"translate(-300.250000, -457.000000)\">\n            <g id=\"handle\" transform=\"translate(297.000000, 455.000000)\">\n                <rect id=\"Rectangle\" x=\"0\" y=\"0\" width=\"18\" height=\"22\" fill=\"none\"></rect>\n                <g id=\"Group-5\" transform=\"translate(5.000000, 2.000000)\" fillRule=\"nonzero\">\n                    <circle id=\"Oval\" cx=\"1.5\" cy=\"1.5\" r=\"1.5\"></circle>\n                    <circle id=\"Oval-Copy-2\" cx=\"1.5\" cy=\"6.5\" r=\"1.5\"></circle>\n                    <circle id=\"Oval-Copy\" cx=\"6.5\" cy=\"1.5\" r=\"1.5\"></circle>\n                    <circle id=\"Oval-Copy-3\" cx=\"6.5\" cy=\"6.5\" r=\"1.5\"></circle>\n                    <circle id=\"Oval-Copy-5\" cx=\"1.5\" cy=\"11.5\" r=\"1.5\"></circle>\n                    <circle id=\"Oval-Copy-6\" cx=\"1.5\" cy=\"16.5\" r=\"1.5\"></circle>\n                    <circle id=\"Oval-Copy-4\" cx=\"6.5\" cy=\"11.5\" r=\"1.5\"></circle>\n                    <circle id=\"Oval-Copy-7\" cx=\"6.5\" cy=\"16.5\" r=\"1.5\"></circle>\n                </g>\n            </g>\n        </g>\n    </g>\n);\n","import React from 'react';\n\nexport const type = () => 'move-up';\n\nexport const icon = () => (\n    <g id=\"Side-nav-+-new-editor\" stroke=\"none\" strokeWidth=\"1\" fillRule=\"evenodd\">\n        <g id=\"Drag-and-drop\" transform=\"translate(-300.000000, -442.000000)\">\n            <g id=\"move_up\" transform=\"translate(297.000000, 437.000000)\">\n                <g id=\"Icon-24px\">\n                    <polygon id=\"Shape\" fillRule=\"nonzero\" points=\"4.41 12.41 9 7.83 13.59 12.41 15 11 9 5 3 11\"></polygon>\n                    <polygon id=\"Shape\" points=\"0 0 18 0 18 18 0 18\" fill=\"none\"></polygon>\n                </g>\n            </g>\n        </g>\n    </g>\n);\n","import React from 'react';\n\nexport const type = () => 'move-down';\n\nexport const icon = () => (\n    <g id=\"Side-nav-+-new-editor\" stroke=\"none\" strokeWidth=\"1\" fillRule=\"evenodd\">\n        <g id=\"Drag-and-drop\" transform=\"translate(-300.000000, -481.000000)\">\n            <g id=\"move_down\" transform=\"translate(297.000000, 477.000000)\">\n                <g id=\"Icon-24px\"></g>\n                <polygon id=\"Shape\" fillRule=\"nonzero\" points=\"4.41 4.84 9 9.42 13.59 4.84 15 6.25 9 12.25 3 6.25\"></polygon>\n                <polygon id=\"Shape\" points=\"0 0 18 0 18 18 0 18\" fill=\"none\"></polygon>\n            </g>\n        </g>\n    </g>\n);\n","const titleStart = input => input.lastIndexOf('/');\nconst titleEnd = input => input.indexOf('@');\nconst titleReducer = input => input.slice((titleStart(input) + 1), titleEnd(input));\nconst titleSpacer = input => input.replace(/-/g, ' ');\nconst titleCaps = input => input.toUpperCase();\n\nexport const titleGenerator = (input) => {\n  const reducedTitle = titleReducer(input);\n  const spacedTitle = titleSpacer(reducedTitle);\n  const finalTitle = titleCaps(spacedTitle);\n  return finalTitle;\n};\n\nexport const headerGenerator = (templateTitle, inputTitle) => {\n  const title = titleGenerator(templateTitle);\n  const header = inputTitle ? (title + inputTitle) : title;\n  const truncatedTitle = ((header.length > 54) ? (`${header.slice(0, 54)}...`) : header);\n  return truncatedTitle;\n};\n\nexport const childReducer = (children) => children.reduce((acc, cur) => `${acc}${cur.text}`, '');\n","/* React */\nimport React, { useState, createContext } from 'react';\nimport { Editor, Transforms } from 'slate';\nimport { ReactEditor } from 'slate-react';\nimport PropTypes from 'prop-types';\n\n/* Styling */\nimport * as S from '../styles';\n\n/* Icons */\nimport * as deleteIcon from '../../icons/trash';\nimport * as editIcon from '../../icons/edit';\nimport * as testIcon from '../../icons/testIcon';\nimport * as dragIcon from '../../icons/drag';\nimport * as upIcon from '../../icons/move_up';\nimport * as downIcon from '../../icons/move_down';\n\n/* Actions */\nimport { headerGenerator, titleGenerator } from '../actions';\n\n/**\n * A React context for sharing the clause object,\n * in a way that re-renders the context whenever changes occur.\n */\nexport const ClauseContext = createContext(null);\n\n/**\n * Component to render a clause\n * This will have an id property of the clauseid\n * @param {*} props\n */\nconst ClauseComponent = React.forwardRef((props, ref) => {\n  const clauseProps = props.clauseProps || Object.create(null);\n\n  // Tooltip visibility controls\n  const [hovering, setHovering] = useState(false);\n  const [hoveringHeader, setHoveringHeader] = useState(false);\n  const [hoveringTestIcon, setHoveringTestIcon] = useState(false);\n  const [hoveringEditIcon, setHoveringEditIcon] = useState(false);\n  const [hoveringDeleteIcon, setHoveringDeleteIcon] = useState(false);\n  // const [listVariables, setListVariables] = useState({});\n\n  const title = titleGenerator(props.templateUri);\n  const header = headerGenerator(props.templateUri, clauseProps.HEADER_TITLE);\n  const iconWrapperProps = {\n    currentHover: hovering,\n    contentEditable: false,\n    suppressContentEditableWarning: true,\n    style: { userSelect: 'none' },\n  };\n\n  const testIconProps = {\n    'aria-label': testIcon.type,\n    width: '19px',\n    height: '19px',\n    viewBox: '0 0 16 20',\n    clauseIconColor: clauseProps.ICON_HOVER_COLOR,\n  };\n\n  const editIconProps = {\n    'aria-label': editIcon.type,\n    width: '19px',\n    height: '19px',\n    viewBox: '0 0 19 19',\n    clauseIconColor: clauseProps.ICON_HOVER_COLOR,\n  };\n\n  const deleteIconProps = {\n    'aria-label': deleteIcon.type,\n    width: '19px',\n    height: '19px',\n    viewBox: '0 0 12 15',\n    clauseIconColor: clauseProps.ICON_HOVER_COLOR,\n  };\n\n  const dragIconProps = {\n    'aria-label': dragIcon.type,\n    width: '12px',\n    height: '15px',\n    viewBox: '0 0 12 15',\n  };\n\n  const upIconProps = {\n    'aria-label': upIcon.type,\n    width: '16px',\n    height: '12px',\n    viewBox: '0 0 16 12',\n  };\n\n  const downIconProps = {\n    'aria-label': downIcon.type,\n    width: '16px',\n    height: '12px',\n    viewBox: '0 0 16 12',\n  };\n\n  const handleClick = (event, down) => {\n    const node = ReactEditor.toSlateNode(props.editor, event.target);\n    const path = ReactEditor.findPath(props.editor, node);\n    const range = Editor.range(props.editor, path);\n    const documentEnd = Editor.end(props.editor, []);\n    const newPath = [Math.max(range.anchor.path[0], range.focus.path[0]) + (down ? 1 : -1)];\n    if (newPath[0] >= 0 && newPath[0] <= documentEnd.path[0]) {\n      Transforms.moveNodes(props.editor, { at: path, to: newPath });\n    }\n  };\n\n  // const setDraggable = (event, draggable) => event.target.closest('.ui-contract-editor__clause').setAttribute('draggable', draggable);\n  return (\n    <ClauseContext.Provider value={hovering}>\n      <S.ClauseWrapper\n        src={props.templateUri}\n        id={props.name}\n        className={`ui-contract-editor__clause ${props.error ? 'error' : ''}`}\n        // onMouseEnter={() => setHovering(true)}\n        // onMouseLeave={() => setHovering(false)}\n        style={{ userSelect: `${props.readOnly?\"text\":\"none\"}`, padding: '3px'}}\n        draggable=\"false\"\n        ref={ref}\n        error={props.error}\n        {...props.attributes}\n      >\n      {/*\n      {\n        Object.entries(listVariables).map(([key, value]) => (\n          <ClauseVariableList\n                key={key}\n                listIconStyle={value.position.popupStyle}\n                slateListKey={key}\n                nodeValue={value}\n                {...ListIconProps}\n              />\n        ))\n      } */}\n        <S.ClauseHeader\n          className='ui-contract-editor__clause-header'\n          currentHover={hovering}\n          contentEditable={false}\n          suppressContentEditableWarning={true}\n          style={{ userSelect: 'none' }}\n        >\n          {(hoveringHeader && header.length > 54)\n            && <S.HeaderToolTipWrapper>\n              <S.HeaderToolTip>\n                {title + clauseProps.HEADER_TITLE}\n              </S.HeaderToolTip>\n            </S.HeaderToolTipWrapper>\n          }\n          <S.HeaderToolTipText\n            onMouseEnter={() => setHoveringHeader(true)}\n            onMouseLeave={() => setHoveringHeader(false)}\n          >\n            {header}\n          </S.HeaderToolTipText>\n        </S.ClauseHeader>\n        {!props.readOnly\n          && header.length !== 0 ? <>\n              <S.DragWrapper\n                {...iconWrapperProps}\n              >\n              <S.DragIcon\n                {...upIconProps}\n                position={-3}\n                onClick={handleClick}\n              >\n                {upIcon.icon()}\n              </ S.DragIcon>\n              <S.DragIcon {...dragIconProps} >\n                {dragIcon.icon()}\n              </ S.DragIcon>\n              <S.DragIcon\n                {...downIconProps}\n                position={-10}\n                onClick={(e) => handleClick(e, true)}\n              >\n                {downIcon.icon()}\n              </ S.DragIcon>\n            </S.DragWrapper>\n            <S.TestWrapper\n              {...iconWrapperProps}\n              onMouseEnter={() => setHoveringTestIcon(true)}\n              onMouseLeave={() => setHoveringTestIcon(false)}\n              onClick={() => clauseProps.CLAUSE_TEST_FUNCTION(props)}\n            >\n              <S.ClauseIcon\n                {...testIconProps}\n                hovering={hoveringTestIcon}\n              >\n                {testIcon.icon()}\n              </ S.ClauseIcon>\n              {(hoveringTestIcon)\n                && <S.HeaderToolTipWrapper>\n                  <S.HeaderToolTip>\n                    Test\n                  </S.HeaderToolTip>\n                </S.HeaderToolTipWrapper>\n              }\n            </S.TestWrapper>\n            <S.EditWrapper\n              {...iconWrapperProps}\n              onMouseEnter={() => setHoveringEditIcon(true)}\n              onMouseLeave={() => setHoveringEditIcon(false)}\n              onClick={() => clauseProps.CLAUSE_EDIT_FUNCTION(props)}\n            >\n              <S.ClauseIcon\n                {...editIconProps}\n                hovering={hoveringEditIcon}\n              >\n                {editIcon.icon()}\n              </ S.ClauseIcon>\n              {(hoveringEditIcon)\n                && <S.HeaderToolTipWrapper>\n                  <S.HeaderToolTip>\n                    Edit\n                  </S.HeaderToolTip>\n                </S.HeaderToolTipWrapper>\n              }\n            </S.EditWrapper>\n            <S.DeleteWrapper\n              {...iconWrapperProps}\n              onMouseEnter={() => setHoveringDeleteIcon(true)}\n              onMouseLeave={() => setHoveringDeleteIcon(false)}\n              onClick={() => clauseProps.CLAUSE_DELETE_FUNCTION(props)}\n            >\n              <S.ClauseIcon\n                {...deleteIconProps}\n                hovering={hoveringDeleteIcon}\n              >\n                {deleteIcon.icon()}\n              </ S.ClauseIcon>\n              {(hoveringDeleteIcon)\n                && <S.HeaderToolTipWrapper>\n                  <S.HeaderToolTip>\n                    Delete\n                  </S.HeaderToolTip>\n                </S.HeaderToolTipWrapper>\n              }\n            </S.DeleteWrapper>\n          </> : null\n        }\n        <S.ClauseBody\n          // onMouseEnter={(e) => setDraggable(e, false)}\n          // onMouseLeave={(e) => setDraggable(e, true)}\n        >\n          {props.children}\n        </S.ClauseBody>\n      </S.ClauseWrapper>\n    </ClauseContext.Provider>\n  );\n});\n\nClauseComponent.displayName = 'ClauseComponent';\n\nClauseComponent.propTypes = {\n  attributes: PropTypes.PropTypes.shape({\n    'data-key': PropTypes.string,\n  }),\n  children: PropTypes.PropTypes.object.isRequired,\n  name: PropTypes.string,\n  clauseProps: PropTypes.shape({\n    CLAUSE_DELETE_FUNCTION: PropTypes.func,\n    CLAUSE_EDIT_FUNCTION: PropTypes.func,\n    CLAUSE_TEST_FUNCTION: PropTypes.func,\n  }),\n  editor: PropTypes.any,\n  error: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  templateUri: PropTypes.string.isRequired,\n};\n\nexport default ClauseComponent;\n","export const CLAUSE = 'clause';\nexport const VARIABLE = 'variable';\nexport const CONDITIONAL = 'conditional';\nexport const OPTIONAL = 'optional';\nexport const FORMULA = 'formula';\n\nconst INLINES = {\n  [VARIABLE]: true,\n  [CONDITIONAL]: true,\n  [OPTIONAL]: true,\n  [FORMULA]: true\n};\nconst VOIDS = {};\n\n/* eslint no-param-reassign: 0 */\nconst withClauseSchema = (editor) => {\n  const { isVoid, isInline } = editor;\n  editor.isVoid = element => (VOIDS[element.type] || isVoid(element));\n  editor.isInline = element => (INLINES[element.type] || isInline(element));\n\n  return editor;\n};\n\nexport default withClauseSchema;\n","import { Node } from 'slate';\nimport { isEqual } from 'lodash';\nimport { VARIABLE } from '../ContractEditor/plugins/withClauseSchema';\n\nconst inVariable = (editor) => {\n  const { selection } = editor;\n  if (!selection) return false;\n  // check if the user has selected more than just a variable\n  if (!isEqual(selection.anchor.path, selection.focus.path)) return false;\n  return Node.parent(editor, editor.selection.focus.path).type === VARIABLE;\n};\n\nexport default inVariable;\n","import { Node } from 'slate';\nimport { Decorators } from '@accordproject/markdown-cicero';\nimport inVariable from './inVariable';\n\nexport const isReadOnlyVariable = (variableNode) => {\n  try {\n    const decorators = new Decorators(variableNode.data);\n    return (decorators.getDecoratorValue('ContractEditor', 'readOnly') === true);\n  } catch (err) {\n    return false;\n  }\n};\n\nexport const getDecoratorArguments = (variableNode) => {\n  try {\n    const decorators = new Decorators(variableNode.data);\n    return decorators.getArguments('ContractEditor');\n  } catch (err) {\n    return {};\n  }\n};\n\nexport const inReadOnlyVariable = (editor) => {\n  if (inVariable(editor)) {\n    const variableNode = Node.parent(editor, editor.selection.focus.path);\n    return isReadOnlyVariable(variableNode);\n  }\n  return false;\n};\n","/* React */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n/* Plugins */\nimport { VARIABLE } from '../../ContractEditor/plugins/withClauseSchema';\nimport { getDecoratorArguments } from '../../utilities/variableDecorators';\n\n/**\n * Copies values if present in a source object into a destination\n * object, optionally renaming keys\n * @param {object} source the source object, used to read value\n * @param {string} sourceKey the name of the key in the source object\n * @param {object} destination the destination object to be modified\n * @param {[string]} destinationKey the name of the key to set in the\n * destination object, if null the sourceKey is used.\n */\nconst override = (source, sourceKey, destination, destinationKey) => {\n  if (source[sourceKey] !== undefined) {\n    destination[destinationKey || sourceKey] = source[sourceKey];\n  }\n};\n\nconst VariableWrapper = styled.span`\n  border: ${props => props.border} 1px solid !important;\n  background-color: ${props => props['background-color']} !important;\n  opacity: ${props => props.opacity} !important;\n  ${props => props['font-family'] ? `font-family:${props['font-family']}!important;` : ''}\n  `;\n\nconst Variable = React.forwardRef((props, ref) => {\n  const {\n    attributes,\n    children,\n    editor,\n    element,\n    isFormulaDependency\n  } = props;\n\n  const variableStyles = getDecoratorArguments(element);\n  const style = {};\n  const defaultColor = '#A4BBE7';\n  style.border = defaultColor;\n  style['background-color'] = '#FFFFFF';\n  style.border = defaultColor;\n  style.opacity = 1;\n\n  if (isFormulaDependency(editor, element)) {\n    style.border = '#AF54C4';\n    style['background-color'] = '#BED3FC';\n    style.border = defaultColor;\n  }\n\n  // allow decorator on the variable to override styles\n  if (variableStyles) {\n    override(variableStyles, 'border', style);\n    override(variableStyles, 'backgroundColor', style, 'background-color');\n    override(variableStyles, 'opacity', style);\n    override(variableStyles, 'fontFamily', style, 'font-family');\n  }\n\n  const VARIABLE_PROPS = {\n    className: VARIABLE,\n    name: element.data.name,\n    ...attributes,\n    ...style,\n    ref\n  };\n\n  return (<VariableWrapper {...VARIABLE_PROPS}>{children}</VariableWrapper>);\n});\n\nVariable.displayName = 'Variable';\n\nVariable.propTypes = {\n  attributes: PropTypes.PropTypes.shape({\n    'data-key': PropTypes.string,\n  }),\n  children: PropTypes.object.isRequired,\n  editor: PropTypes.any,\n  element: PropTypes.any,\n  isFormulaDependency: PropTypes.func\n};\n\nexport default Variable;\n","import React from 'react';\n\nexport const type = () => 'addConditional';\n\nexport const icon = hovering => (\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <g id=\"conditional-icon-default\" transform=\"translate(2.000000, 1.000000)\" fillRule=\"nonzero\">\n            <g id=\"Oval\">\n                <use fill=\"black\" fillOpacity=\"1\" filter=\"url(#filter-2)\" xlinkHref=\"#path-1\"></use>\n                <circle stroke={hovering ? '#B11A00' : '#FF6044'} strokeWidth=\"1\" strokeLinejoin=\"square\" fill={hovering ? '#B11A00' : '#FFFFFF'} fillRule=\"evenodd\" cx=\"7\" cy=\"7\" r=\"6.5\"></circle>\n            </g>\n            <polygon id=\"+-copy\" fill={hovering ? '#FFFFFF' : '#B11A00'} points=\"6.24723247 6.24723247 6.24723247 3 7.75276753 3 7.75276753 6.24723247 11 6.24723247 11 7.75276753 7.75276753 7.75276753 7.75276753 11 6.24723247 11 6.24723247 7.75276753 3 7.75276753 3 6.24723247\"></polygon>\n        </g>\n    </g>\n);\n","/* React */\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\n/* Styling */\nimport { ClauseContext } from '../Clause';\nimport { ClauseConditional, ClauseConditionalTooltip } from '../styles';\n\nimport * as conditionalIcon from '../../icons/conditional';\n\n/**\n * Component to render an addition symbol for an empty conditional\n * This will have an key property of the Slate node\n * @param {*} props\n */\nconst ConditionalBoolean = (props) => {\n  const [hoveringConditional, setHoveringConditional] = useState(false);\n  const [tooltipHeight, setTooltipHeight] = useState(0);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    setTooltipHeight(ref.current ? ref.current.offsetHeight : 0);\n  }, []);\n\n  const conditionalIconProps = {\n    'aria-label': conditionalIcon.type,\n    viewBox: '0 0 18 18',\n    className: 'conditionalIcon',\n    onMouseEnter: () => setHoveringConditional(true),\n    onMouseLeave: () => setHoveringConditional(false),\n    onClick: props.toggleConditional\n  };\n\n  const conditionalTooltip = {\n    ref,\n    currentHover: hoveringConditional,\n    className: 'variableTooltip',\n    style: { marginTop: `-${tooltipHeight + 10}px` },\n    caretTop: tooltipHeight - 2,\n    caretLeft: 2,\n  };\n\n  return (\n    <ClauseContext.Consumer>\n      { hoveringClause => (<>\n        <ClauseConditionalTooltip\n          contentEditable={false}\n          {...conditionalTooltip}\n        >\n          Show text: \"{props.whenTrue}\"\n        </ClauseConditionalTooltip>\n        <ClauseConditional\n          contentEditable={false}\n          currentHover={hoveringClause}\n          {...conditionalIconProps}\n        >\n          {conditionalIcon.icon(hoveringConditional)}\n        </ClauseConditional>\n      </>) }\n    </ClauseContext.Consumer>\n  );\n};\n\nConditionalBoolean.propTypes = {\n  whenTrue: PropTypes.string,\n  toggleConditional: PropTypes.func,\n};\n\nexport default ConditionalBoolean;\n","/* React */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Actions */\nimport { childReducer } from '../actions';\n\n/* Styling */\nimport { ClauseConditionalTooltip } from '../styles';\n\n/**\n * Component to render a tooltip\n * Displays what the conditional text will be changed to\n * @param {*} props\n */\nconst ConditionalSwitch = (props) => {\n  const conditionalTooltip = {\n    className: 'variableTooltip',\n    currentHover: props.currentHover,\n    caretTop: 21,\n    caretLeft: 2,\n    tooltipHeight: 1.85,\n  };\n  const trueHasLength = childReducer(props.whenTrue).length;\n  const falseHasLength = childReducer(props.whenFalse).length;\n  const tooltipText = props.isTrue ? childReducer(props.whenFalse) : childReducer(props.whenTrue);\n  const tooltipInstructions = (text) => {\n    if (trueHasLength && falseHasLength) return `Change to: \"${text}\"`;\n    if (props.isContentShowing) return 'Hide text';\n    return `Change to: \"${text}\"`;\n  };\n\n  return (\n    <>\n      <ClauseConditionalTooltip\n        contentEditable={false}\n        {...conditionalTooltip}\n      >\n        {tooltipInstructions(tooltipText)}\n      </ClauseConditionalTooltip>\n    </>\n  );\n};\n\nConditionalSwitch.propTypes = {\n  currentHover: PropTypes.bool,\n  isContentShowing: PropTypes.bool,\n  whenTrue: PropTypes.string,\n  whenFalse: PropTypes.string,\n  isTrue: PropTypes.bool,\n};\n\nexport default ConditionalSwitch;\n","/* React */\nimport React, { useState } from 'react';\nimport { Editor, Transforms } from 'slate';\nimport PropTypes from 'prop-types';\nimport { ReactEditor, useEditor } from 'slate-react';\n\n/* Plugins */\nimport { CONDITIONAL } from '../../ContractEditor/plugins/withClauseSchema';\n\n/* Actions */\nimport { childReducer } from '../actions';\n\n/* Components */\nimport ConditionalBoolean from './ConditionalBoolean';\nimport ConditionalSwitch from './ConditionalSwitch';\n\n/**\n * Component to render an inline conditional node\n * This will have an id property of the Slate key\n * @param {*} props\n */\nconst Conditional = React.forwardRef((props, ref) => {\n  const {\n    attributes,\n    children,\n    children: { props: { node } },\n    children: { props: { node: { data } } },\n  } = props;\n  const editor = useEditor();\n  const [hovering, setHovering] = useState(false);\n  const conditionalPath = ReactEditor.findPath(editor, node);\n  const isNotReadOnly = !props.readOnly;\n  const isContentShowing = data.isTrue\n    ? !!childReducer(data.whenTrue).length\n    : !!childReducer(data.whenFalse).length;\n\n  const toggleConditional = (path) => {\n    const newConditional = {\n      object: 'inline',\n      type: CONDITIONAL,\n      data: {\n        name: data.name,\n        whenTrue: data.whenTrue,\n        whenFalse: data.whenFalse,\n        isTrue: !data.isTrue,\n      },\n      children: data.isTrue ? data.whenFalse : data.whenTrue\n    };\n    Editor.withoutNormalizing(editor, () => {\n      Transforms.removeNodes(editor, { at: path });\n      Transforms.insertNodes(editor, newConditional, { at: path });\n    });\n  };\n\n  const conditionalProps = {\n    id: data.name,\n    className: isContentShowing ? CONDITIONAL : '',\n    onMouseEnter: () => setHovering(true),\n    onMouseLeave: () => setHovering(false),\n    onClick: () => toggleConditional(conditionalPath),\n    ...attributes,\n    ref\n  };\n\n  const conditionalSwitchProps = {\n    currentHover: hovering,\n    isContentShowing,\n    ...data,\n  };\n  const conditionalIconProps = {\n    currentHover: hovering,\n    whenTrue: childReducer(data.whenTrue),\n    toggleConditional: () => toggleConditional(conditionalPath),\n  };\n\n  return (\n    <span {...attributes}>\n    { isNotReadOnly && (isContentShowing\n      ? <ConditionalSwitch {...conditionalSwitchProps} />\n      : <ConditionalBoolean {...conditionalIconProps} />) }\n        <span {...conditionalProps}>{children}</span>\n    </span>\n  );\n});\n\nConditional.displayName = 'Conditional';\n\nConditional.propTypes = {\n  attributes: PropTypes.PropTypes.shape({\n    'data-key': PropTypes.string,\n  }),\n  children: PropTypes.object.isRequired,\n  editor: PropTypes.any,\n  node: PropTypes.shape({\n    data: PropTypes.obj,\n  }),\n  readOnly: PropTypes.bool,\n};\n\nexport default Conditional;\n","/* React */\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\n/* Styling */\nimport { ClauseContext } from '../Clause';\nimport { ClauseOptional, ClauseOptionalTooltip } from '../styles';\n\nimport * as optionalIcon from '../../icons/conditional';\n\n/**\n * Component to render an addition symbol for an empty optional\n * This will have an key property of the Slate node\n * @param {*} props\n */\nconst OptionalBoolean = (props) => {\n  const [hoveringOptional, setHoveringOptional] = useState(false);\n  const [tooltipHeight, setTooltipHeight] = useState(0);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    setTooltipHeight(ref.current ? ref.current.offsetHeight : 0);\n  }, []);\n\n  const optionalIconProps = {\n    'aria-label': optionalIcon.type,\n    viewBox: '0 0 18 18',\n    className: 'optionalIcon',\n    onMouseEnter: () => setHoveringOptional(true),\n    onMouseLeave: () => setHoveringOptional(false),\n    onClick: props.toggleOptional\n  };\n\n  const optionalTooltip = {\n    ref,\n    currentHover: hoveringOptional,\n    className: 'optionalTooltip',\n    style: { marginTop: `-${tooltipHeight + 10}px` },\n    caretTop: tooltipHeight - 2,\n    caretLeft: 2,\n  };\n\n  return (\n    <ClauseContext.Consumer>\n      { hoveringClause => (<>\n        <ClauseOptionalTooltip\n          contentEditable={false}\n          {...optionalTooltip}\n        >\n          Show text: \"{props.whenSome}\"\n        </ClauseOptionalTooltip>\n        <ClauseOptional\n          contentEditable={false}\n          currentHover={hoveringClause}\n          {...optionalIconProps}\n        >\n          {optionalIcon.icon(hoveringOptional)}\n        </ClauseOptional>\n      </>) }\n    </ClauseContext.Consumer>\n  );\n};\n\nOptionalBoolean.propTypes = {\n  whenSome: PropTypes.string,\n  toggleOptional: PropTypes.func,\n};\n\nexport default OptionalBoolean;\n","/* React */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Styling */\nimport { ClauseOptionalTooltip } from '../styles';\n\n/**\n * Component to render a tooltip\n * Displays what the optional text will be changed to\n * @param {*} props\n */\nconst OptionalSwitch = (props) => {\n  const optionalTooltip = {\n    className: 'optionalTooltip',\n    currentHover: props.currentHover,\n    caretTop: 21,\n    caretLeft: 2,\n    tooltipHeight: 1.85,\n  };\n  const tooltipText = props.hasSome ? props.hasNone : props.hasSome;\n  const tooltipInstructions = props.isContentShowing\n    ? 'Hide text'\n    : `Change to: \"${tooltipText}\"`;\n\n  return (\n    <>\n      <ClauseOptionalTooltip\n        contentEditable={false}\n        {...optionalTooltip}\n      >\n        {tooltipInstructions}\n      </ClauseOptionalTooltip>\n    </>\n  );\n};\n\nOptionalSwitch.propTypes = {\n  currentHover: PropTypes.bool,\n  isContentShowing: PropTypes.bool,\n  whenTrue: PropTypes.string,\n  hasNone: PropTypes.string,\n  hasSome: PropTypes.bool,\n};\n\nexport default OptionalSwitch;\n","/* React */\nimport React, { useState } from 'react';\nimport { Editor, Transforms, Node } from 'slate';\nimport PropTypes from 'prop-types';\nimport { ReactEditor, useEditor } from 'slate-react';\n\n/* Plugins */\nimport { OPTIONAL, VARIABLE } from '../../ContractEditor/plugins/withClauseSchema';\n\n/* Components */\nimport OptionalBoolean from './OptionalBoolean';\nimport OptionalSwitch from './OptionalSwitch';\n\n/**\n * Component to render an inline optional node\n * This will have an id property of the Slate key\n * @param {*} props\n */\nconst Optional = React.forwardRef((props, ref) => {\n  const {\n    attributes,\n    children,\n    children: { props: { node } },\n    children: { props: { node: { data } } },\n  } = props;\n  const editor = useEditor();\n  const [hovering, setHovering] = useState(false);\n  const optionalPath = ReactEditor.findPath(editor, node);\n  const isNotReadOnly = !props.readOnly;\n  const isContentShowing = !!Node.string(node).length;\n  const optionalReverse = {\n    object: 'inline',\n    type: OPTIONAL,\n    data: {\n      name: data.name,\n      whenSome: data.whenSome,\n      whenNone: data.whenNone,\n      hasSome: !data.hasSome,\n    },\n    children: data.hasSome ? data.whenNone : data.whenSome\n  };\n\n  const isOptionalVariable = (target) => {\n    const TARGET_NODE = ReactEditor.toSlateNode(editor, target);\n    const TARGET_PATH = ReactEditor.findPath(editor, TARGET_NODE);\n    // eslint-disable-next-line no-restricted-syntax\n    for (const [currNode] of Node.ancestors(editor, TARGET_PATH, { reverse: true })) {\n      if (currNode.type === VARIABLE) return true;\n    }\n    return false;\n  };\n\n  const swapOptional = (path) => {\n    Editor.withoutNormalizing(editor, () => {\n      Transforms.removeNodes(editor, { at: path });\n      Transforms.insertNodes(editor, optionalReverse, { at: path });\n    });\n  };\n\n  const toggleOptional = (path, target) => {\n    if (!target || !isOptionalVariable(target)) {\n      swapOptional(path);\n    }\n  };\n\n  const handleMouseEnter = (target) => {\n    if (target.className === OPTIONAL) { setHovering(true); }\n    if (target.className === VARIABLE) { setHovering(false); }\n  };\n\n  const optionalProps = {\n    id: data.name,\n    className: isContentShowing ? OPTIONAL : '',\n    onMouseEnter: (e) => handleMouseEnter(e.target),\n    onMouseLeave: () => setHovering(false),\n    onClick: (e) => toggleOptional(optionalPath, e.target),\n    ...attributes,\n    ref\n  };\n\n  const optionalSwitchProps = {\n    currentHover: hovering,\n    isContentShowing,\n    ...data,\n  };\n  const optionalIconProps = {\n    currentHover: hovering,\n    whenSome: Node.string(optionalReverse),\n    toggleOptional: () => toggleOptional(optionalPath),\n  };\n\n  return (\n    <span {...attributes}>\n    { isNotReadOnly && (isContentShowing\n      ? <OptionalSwitch {...optionalSwitchProps} />\n      : <OptionalBoolean {...optionalIconProps} />) }\n        <span {...optionalProps}>{children}</span>\n    </span>\n  );\n});\n\nOptional.displayName = 'Optional';\n\nOptional.propTypes = {\n  attributes: PropTypes.PropTypes.shape({\n    'data-key': PropTypes.string,\n  }),\n  children: PropTypes.object.isRequired,\n  editor: PropTypes.any,\n  node: PropTypes.shape({\n    data: PropTypes.obj,\n  }),\n  readOnly: PropTypes.bool,\n};\n\nexport default Optional;\n","/* React */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n/* Plugins */\nimport { FORMULA } from '../../ContractEditor/plugins/withClauseSchema';\n\n//  overflow-wrap: break-word; // NEEDS TO BE NONE\nexport const FormulaTooltip = styled.span`\n  z-index: 2;\n  visibility: ${props => (props.currentHover ? 'visible' : 'hidden')};\n  transform: translateY(-110%);\n  white-space: normal;\n\n  &:before {\n    content: '';\n    position: absolute;\n    bottom: -6.7px;\n    left: 1px;\n    border-top: 6px solid #141F3C;\n    border-left: 6px solid transparent;\n    border-right: 6px solid transparent;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: -6.7px;\n    left: 2px;\n    border-top: 4px solid #141F3C;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n  }\n`;\n\n/**\n * Component to render an inline formula node\n * This will have an id property of the Slate key\n * @param {*} props\n */\nconst Formula = React.forwardRef((props, ref) => {\n  const {\n    attributes,\n    children,\n    children: { props: { node } },\n    children: { props: { node: { data } } },\n    setFormulaNode,\n    setHoveringFormulaContract\n  } = props;\n  const [hoveringFormula, setHoveringFormula] = useState(false);\n\n  const handlerIn = () => {\n    setHoveringFormula(true);\n    setHoveringFormulaContract(true);\n    setFormulaNode(node);\n  };\n\n  const handlerOut = () => {\n    setHoveringFormula(false);\n    setHoveringFormulaContract(false);\n    setFormulaNode({});\n  };\n\n  const wrapperProps = {\n    onMouseEnter: () => handlerIn(),\n    onMouseLeave: () => handlerOut(),\n    ...attributes,\n  };\n\n  const formulaProps = {\n    id: data.name,\n    className: FORMULA,\n    ref,\n    ...attributes\n  };\n\n  const formulaTooltip = {\n    className: 'variableTooltip',\n    currentHover: hoveringFormula,\n    contentEditable: false\n  };\n\n  return (\n    <span {...wrapperProps}>\n      <FormulaTooltip {...formulaTooltip}>\n          {data.code}\n      </FormulaTooltip>\n      <span {...formulaProps}>{children}</span>\n    </span>\n  );\n});\n\nFormula.displayName = 'Formula';\n\nFormula.propTypes = {\n  attributes: PropTypes.PropTypes.shape({\n    'data-key': PropTypes.string,\n  }),\n  children: PropTypes.object.isRequired,\n  setHoveringFormulaContract: PropTypes.func,\n  setFormulaNode: PropTypes.func,\n  editor: PropTypes.any,\n  node: PropTypes.shape({\n    data: PropTypes.obj,\n  }),\n  readOnly: PropTypes.bool,\n};\n\nexport default Formula;\n","/**\n * Recursively match nodes in a slate dom using a matching function\n * @param {*} node a slate node\n * @param {*} matcher a matching function\n * @returns {[*]} the array of matched nodes\n */\nconst getChildren = (node, matcher) => {\n  if (matcher(node)) {\n    return node;\n  }\n\n  if (node.children) {\n    let result = [];\n    node.children.forEach(n => {\n      const r = getChildren(n, matcher);\n      if (Array.isArray(r)) {\n        result = result.concat(r);\n      } else {\n        result.push(r);\n      }\n    });\n    return result;\n  }\n\n  return [];\n};\n\nexport default getChildren;\n","import { v4 as uuidv4 } from 'uuid';\nimport { Editor, Node, Transforms, Path } from 'slate';\nimport { HistoryEditor } from 'slate-history';\n\nimport { SlateTransformer } from '@accordproject/markdown-slate';\nimport { HtmlTransformer } from '@accordproject/markdown-html';\nimport { CLAUSE, VARIABLE, FORMULA } from './withClauseSchema';\nimport getChildren from '../../utilities/getChildren';\n\nimport '../../styles.css';\n\n/**\n * Returns a formula inline from clauseNode whose name\n * matches the name of the search formula\n * @param {*} clauseNode the input clause node\n * @param {*} search the formula to look for in the clause node\n */\nexport const findFormula = (clauseNode, search) => {\n  const formulas = getChildren(clauseNode, (n) => n.type === FORMULA\n    && n.data.name === search.data.name);\n  return formulas && formulas.length > 0 ? formulas[0] : null;\n};\n\n/**\n   * Check if UI valid (depth first traversal)\n   * @param {object} params - recursion params\n   * @param {object} children - the Slate children\n   */\nfunction _recursive(params, children) {\n  /* eslint no-underscore-dangle: 0 */\n  children.forEach((child) => {\n    const childType = child.type;\n    switch (child.object) {\n      case 'text':\n        break;\n      default: {\n        // eslint-disable-next-line default-case\n        switch (childType) {\n          case 'ol_list':\n          case 'ul_list': {\n            if (child.data.kind === VARIABLE) {\n              throw new Error('List variable not supported');\n            } if (params.depth > 0) {\n              throw new Error('Nested list not supported');\n            } else {\n              // Increment depth before handling a list children\n              params.depth += 1;\n            }\n          }\n        }\n      }\n    }\n\n    // process any children, attaching to first child if it exists\n    if (child.children) {\n      _recursive(params, child.children);\n    }\n    // Decrement depth when coming out of a list\n    if (childType === 'ol_list' || childType === 'ul_list') {\n      params.depth -= 1;\n    }\n  });\n}\n\nexport const isEditableClause = (editor, event) => {\n  if (\n    event.inputType === 'deleteContentForward'\n    && Node.get(editor, editor.selection.focus.path).text.length === editor.selection.focus.offset\n  ) {\n    const [match] = Editor\n      .nodes(editor, { at: Editor.next(editor)[1], match: n => n.type === CLAUSE });\n    return !match;\n  }\n  return true;\n};\n\n/* eslint no-param-reassign: 0 */\nconst withClauses = (editor, withClausesProps) => {\n  const { insertData, onChange } = editor;\n  const { onClauseUpdated, pasteToContract } = withClausesProps;\n\n  editor.getClauseWithPath = (location = editor.selection) => {\n    const [clauseNodeAndPath] = Editor.nodes(\n      editor,\n      { match: n => n.type === CLAUSE, at: location }\n    );\n    return clauseNodeAndPath;\n  };\n\n  editor.isInsideClause = (location = editor.selection) => !!editor.getClauseWithPath(location);\n\n  editor.onChange = () => {\n    onChange();\n    if (editor.isInsideClause()) {\n      const [clauseNode, path] = editor.getClauseWithPath();\n      const [variable] = Editor.nodes(editor, { match: n => n.type === VARIABLE });\n\n      // if we have edited a variable, then we ensure that all\n      // occurences of the variable get the new value\n      if (variable && variable[0].data && variable[0].data.name) {\n        const variableName = variable[0].data.name;\n        const variableIterator = Editor.nodes(editor, { match: n => n.type === VARIABLE\n          && n.data.name === variableName,\n        at: path });\n        let result = variableIterator.next();\n        while (!result.done) {\n          const entry = result.value;\n          if (!Path.equals(entry[1], variable[1])) {\n            const entryValue = Node.string(entry[0]);\n            const variableValue = Node.string(variable[0]);\n            if (entryValue !== variableValue) {\n              const newNode = JSON.parse(JSON.stringify(variable[0]));\n              HistoryEditor.withoutSaving(editor, () => {\n                Editor.withoutNormalizing(editor, () => {\n                  Transforms.removeNodes(editor, { at: entry[1] });\n                  Transforms.insertNodes(editor, newNode, { at: entry[1] });\n                });\n              });\n            }\n          }\n          result = variableIterator.next();\n        }\n      }\n\n      if (onClauseUpdated) {\n        onClauseUpdated(clauseNode).then(({ node, operation, error }) => {\n          if (operation === 'replace_node') {\n            Transforms.removeNodes(editor, { at: path });\n            Transforms.insertNodes(editor, node, { at: path });\n          } else if (operation === 'update_formulas') {\n            // if we have edited a variable, then we ensure that all\n            // formulas that depend on the variable are updated based on the values in 'node'\n            if (variable && variable[0].data && variable[0].data.name) {\n              const variableName = variable[0].data.name;\n              const formulasIterator = Editor.nodes(editor, { match: n => n.type === FORMULA\n                  && n.data.dependencies.includes(variableName),\n              at: path });\n              let result = formulasIterator.next();\n              while (!result.done) {\n                const formulaEntry = result.value;\n                const newFormula = findFormula(node, formulaEntry[0]);\n                if (newFormula) {\n                  const oldFormulaValue = Node.string(formulaEntry[0]);\n                  const newFormulaValue = Node.string(newFormula);\n                  if (newFormulaValue !== oldFormulaValue) {\n                    HistoryEditor.withoutSaving(editor, () => {\n                      Editor.withoutNormalizing(editor, () => {\n                        Transforms.removeNodes(editor, { at: formulaEntry[1] });\n                        Transforms.insertNodes(editor, newFormula, { at: formulaEntry[1] });\n                      });\n                    });\n                  }\n                }\n                result = formulasIterator.next();\n              }\n            }\n          }\n\n          // set or clear errors\n          HistoryEditor.withoutSaving(editor, () => {\n            Transforms.setNodes(editor, { error: !!error }, { at: path });\n          });\n        });\n      }\n    } // inside a clause\n  };\n\n  editor.insertData = (data) => {\n    const HTML_DOM = data.getData('text/html');\n    if (HTML_DOM) {\n      try {\n        const clausesToParseAndPaste = [];\n        const htmlTransformer = new HtmlTransformer();\n        const slateTransformer = new SlateTransformer();\n\n        const SLATE_DOM = slateTransformer\n          .fromCiceroMark(htmlTransformer.toCiceroMark(HTML_DOM));\n\n        const NEW_SLATE_CHILDREN = SLATE_DOM.document.children.map(\n          (child) => {\n            if (child.type === CLAUSE) {\n              child.data.clauseid = uuidv4();\n              clausesToParseAndPaste.push(child);\n            }\n            return child;\n          }\n        );\n        const NEW_SLATE_DOM = {\n          object: 'value',\n          document: {\n            object: 'document',\n            data: {},\n            children: NEW_SLATE_CHILDREN\n          }\n        };\n\n        clausesToParseAndPaste.forEach((clause) => {\n          pasteToContract(clause.data.clauseid, clause.data.src);\n          onClauseUpdated(clause, true);\n        });\n\n        const NEW_HTML_DOM = htmlTransformer\n          .toHtml(slateTransformer.toCiceroMark(NEW_SLATE_DOM));\n\n        insertData({\n          getData: format => (format === 'text/html'\n            ? NEW_HTML_DOM\n            : data.getData('text/plain')),\n        });\n        return;\n      } catch (err) { console.error(err); }\n    }\n    insertData(data);\n  };\n\n  editor.isClauseSupported = (clauseNode) => {\n    const params = { depth: 0 };\n    let children;\n    if (clauseNode.document) {\n      children = clauseNode.document.children;\n    } else {\n      children = [clauseNode];\n    }\n    _recursive(params, children);\n    return true;\n  };\n\n  editor.canAddClause = () => {\n    // do not allow adding a clause in nested elements (ie. lists, other clauses)\n    if (editor.selection) return (editor.selection.anchor.path.length <= 2);\n    // do allow adding a clause if no selection (can add it to end of doc)\n    return true;\n  };\n\n  return editor;\n};\n\nexport default withClauses;\n","import { Transforms, Node, Editor } from 'slate';\nimport inVariable from '../../utilities/inVariable';\nimport { inReadOnlyVariable, isReadOnlyVariable } from '../../utilities/variableDecorators';\nimport { VARIABLE } from './withClauseSchema';\n\n/* eslint no-param-reassign: 0 */\nconst withVariables = (editor) => {\n  const { insertText, isInline } = editor;\n  editor.insertText = (text) => {\n    const nextNode = Editor.next(editor, {\n      at: editor.selection.focus.path,\n    });\n    const previousNode = Node.parent(editor, editor.selection.focus.path);\n    const textLength = Node.get(editor, editor.selection.focus.path).text\n      .length;\n    const readOnlyNext = (nextNode)\n      ? isReadOnlyVariable(nextNode[0])\n      : null;\n    const readOnlyParent = previousNode\n      ? isReadOnlyVariable(previousNode)\n      : null;\n    // if the current focus is at the end of a node and the next node is a variable\n    // move focus to the start of the variable node\n    if (\n      nextNode &&\n      nextNode[0].type === VARIABLE &&\n      textLength === editor.selection.focus.offset\n    ) {\n      Transforms.select(editor, nextNode[1]);\n      Transforms.collapse(editor, { edge: 'start' });\n    }\n\n    // the default slate implementation of `insertText` moves the cursor\n    // out of inlines before inserting text. Override this for variables\n    // https://github.com/ianstormtaylor/slate/blob/1d7ab974292a3e831908a2ba0aab9fdd8a66fe10/packages/slate/src/create-editor.ts#L154\n    if (Node.parent(editor, editor.selection.focus.path).type === VARIABLE &&\n      ((readOnlyNext === false || nextNode === undefined) &&\n      readOnlyParent === false)\n    ) {\n      Transforms.insertText(editor, text);\n    } else if (\n      Node.parent(editor, editor.selection.focus.path).type !== VARIABLE\n    ) {\n      insertText(text);\n    }\n  };\n\n  editor.isInline = (element) =>\n    element.type === VARIABLE ? true : isInline(element);\n  return editor;\n};\n\n\nexport const isEditableVariable = (lockText, editor, event) => {\n  if (!lockText || !editor.isInsideClause()) return true;\n  const { selection } = editor;\n  const textLength = Node.get(editor, editor.selection.focus.path).text.length;\n  const atEnd = editor => textLength === editor.selection.focus.offset;\n  const editable = inVariable(editor) && !inReadOnlyVariable(editor);\n  if (editable) {\n    if (atEnd(editor) && event.inputType === 'deleteContentForward') {\n      return false;\n    }\n    if (event.inputType === 'deleteContentBackward') {\n      // if we hit backspace and are at the zeroth position of a\n      // variable prevent deleting the char that precedes the variable\n      return selection.anchor.offset > 0;\n    }\n    // do not allow hitting enter or pasting inside variables\n    if (event.inputType === 'insertFromPaste'\n    || event.inputType === 'insertParagraph'\n    || event.inputType === 'insertLineBreak') {\n      return false;\n    }\n  }\n  const nextNode = Editor.next(editor, { at: editor.selection.focus.path });\n  // if the current focus is at the end of a node & the next node is a variable allow editing\n  if (nextNode && nextNode[0].type === VARIABLE && textLength === editor.selection.focus.offset) {\n    if (event.inputType === 'deleteContentBackward') {\n      return false;\n    }\n    return true;\n  }\n  return editable;\n};\n\nexport default withVariables;\n","/* eslint-disable react/display-name */\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* React */\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactEditor } from 'slate-react';\nimport { Editor, Node, Point, Transforms } from 'slate';\n\n/* Components */\nimport { MarkdownEditor } from '@accordproject/ui-markdown-editor';\nimport ClauseComponent from '../components/Clause';\nimport Variable from '../components/Variable';\nimport Conditional from '../components/Conditional';\nimport Optional from '../components/Optional';\nimport Formula from '../components/Formula';\n\n/* Plugins */\nimport withClauseSchema, {\n  CLAUSE,\n  CONDITIONAL,\n  FORMULA,\n  OPTIONAL,\n  VARIABLE\n} from './plugins/withClauseSchema';\nimport withClauses, { isEditableClause } from './plugins/withClauses';\nimport withVariables, { isEditableVariable } from './plugins/withVariables';\n\n/**\n * Adds the current value to local storage\n */\nconst storeLocal = (value) => {\n  localStorage.setItem('contract-editor', value.toJSON());\n};\n\n/**\n * Default contract props\n */\nconst contractProps = {\n  value: {\n    object: 'value',\n    document: {\n      object: 'document',\n      data: {},\n      nodes: [{\n        object: 'block',\n        type: 'paragraph',\n        data: {},\n        nodes: [{\n          object: 'text',\n          text: 'Welcome! Edit this text to get started.',\n          marks: []\n        }],\n      }]\n    }\n  },\n  onChange: storeLocal,\n  plugins: []\n};\n\n/**\n * ContractEditor React component, which wraps a markdown-editor\n * and assigns the ClausePlugin.\n *\n * @param {*} props the properties for the component\n */\nconst ContractEditor = (props) => {\n  const [hoveringFormulaContract, setHoveringFormulaContract] = useState(false);\n  const [formulaNode, setFormulaNode] = useState(null);\n  const withClausesProps = {\n    onClauseUpdated: props.onClauseUpdated,\n    pasteToContract: props.pasteToContract\n  };\n\n  const isFormulaDependency = useCallback((editor, variableNode) => {\n    let formulaClauseName;\n    let isVariableFormulaDependency = false;\n    if (!hoveringFormulaContract || !formulaNode) return isVariableFormulaDependency;\n    const formulaPATH = ReactEditor.findPath(editor, formulaNode);\n    const variablePATH = ReactEditor.findPath(editor, variableNode);\n    // eslint-disable-next-line no-restricted-syntax\n    for (const [n] of Node.ancestors(editor, formulaPATH, { reverse: true })) {\n      if (n.type === CLAUSE) { formulaClauseName = n.data.name; }\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    for (const [n] of Node.ancestors(editor, variablePATH, { reverse: true })) {\n      if (\n        n.type === CLAUSE\n        && n.data.name === formulaClauseName\n        && formulaNode.data.dependencies.includes(variableNode.data.name)\n      ) {\n        isVariableFormulaDependency = true;\n      }\n    }\n    return isVariableFormulaDependency;\n  }, [hoveringFormulaContract, formulaNode]);\n\n  const customElements = (attributes, children, element, editor) => {\n    const CLAUSE_PROPS = {\n      templateUri: (element.data && element.data.src) ? element.data.src : '',\n      name: (element.data && element.data.name) ? element.data.name : '',\n      error: element.error,\n      clauseProps: props.clauseProps,\n      readOnly: props.readOnly,\n      hoveringFormulaContract,\n      attributes,\n      editor,\n    };\n    const VARIABLE_PROPS = {\n      element,\n      editor,\n      isFormulaDependency,\n      ...attributes\n    };\n    const CONDITIONAL_PROPS = {\n      readOnly: props.readOnly,\n      attributes\n    };\n    const FORMULA_PROPS = {\n      name: (element.data && element.data.name) ? element.data.name : '',\n      className: FORMULA,\n      setHoveringFormulaContract,\n      setFormulaNode,\n      attributes,\n      editor,\n    };\n    const OPTIONAL_PROPS = {\n      readOnly: props.readOnly,\n      attributes,\n    };\n    const returnObject = {\n      [CLAUSE]: () => (<ClauseComponent {...CLAUSE_PROPS}>{children}</ClauseComponent>),\n      [VARIABLE]: () => (<Variable {...VARIABLE_PROPS}>{children}</Variable>),\n      [CONDITIONAL]: () => (<Conditional {...CONDITIONAL_PROPS}>{children}</Conditional>),\n      [FORMULA]: () => (<Formula {...FORMULA_PROPS}>{children}</Formula>),\n      [OPTIONAL]: () => (<Optional {...OPTIONAL_PROPS}>{children}</Optional>),\n    };\n    return returnObject;\n  };\n\n\n  const augmentEditor = editor => (\n    props.augmentEditor\n      ? props.augmentEditor(withVariables(withClauses(withClauseSchema(editor), withClausesProps)))\n      : withVariables(withClauses(withClauseSchema(editor), withClausesProps))\n  );\n\n  const isEditable = (editor, event) => {\n    if (editor.isInsideClause()) {\n      const [clauseNode] = editor.getClauseWithPath();\n      if (clauseNode.data.parseable === false) return true;\n    }\n    return isEditableClause(editor, event) && isEditableVariable(props.lockText, editor, event);\n  };\n\n  const canCopy = editor => (!((\n    editor.isInsideClause(editor.selection.anchor)\n    || editor.isInsideClause(editor.selection.focus)\n  )));\n\n  const canKeyDown = (editor, event) => {\n    if (\n      (event.keyCode || event.charCode) === 8\n      && Point.equals(Editor.start(editor, editor.selection.anchor.path), editor.selection.anchor)\n    ) {\n      const [match] = Editor\n        .nodes(editor, { at: Editor.previous(editor)[1], match: n => n.type === CLAUSE });\n      return !match;\n    }\n    return true;\n  };\n\n  const onDragStart = (editor, event) => {\n    event.stopPropagation();\n    const node = ReactEditor.toSlateNode(editor, event.target);\n    const path = ReactEditor.findPath(editor, node);\n    const range = Editor.range(editor, path);\n    event.dataTransfer.setData('text', JSON.stringify(range));\n  };\n\n  const onDragOver = (editor, event) => {\n    event.stopPropagation();\n    event.dataTransfer.dropEffect = 'move';\n  };\n\n  // return true if should continue through to next handler, else return false\n  const onDrop = (editor, event) => {\n    event.preventDefault();\n    const targetRange = ReactEditor.findEventRange(editor, event);\n    const [targetIsClause] = Editor\n      .nodes(editor, { match: n => n.type === CLAUSE, at: targetRange });\n    if (targetIsClause) return false; // do not allow dropping inside of a clause\n    const sourceRange = JSON.parse(event.dataTransfer.getData('text'));\n    const clauseNodeAndPath = editor.getClauseWithPath(sourceRange);\n    if (!clauseNodeAndPath) return true; // continue to next handler if not a clause\n    const node = ReactEditor.toSlateNode(editor, event.target);\n    const path = ReactEditor.findPath(editor, node);\n    const nodes = [...Node.ancestors(editor, path, { reverse: false })];\n    //placementNodeType is used store node type and used to compare if a node is a list or not.\n    const placementNodeType = nodes.length > 1 ? nodes[1][0].type : null;\n    if(placementNodeType === \"ul_list\" || placementNodeType === \"ol_list\"){\n      //Node of type List stored in placementNode and its path in placementNodepath\n      const placementNode = nodes[1][0];\n      const placementNodePath = ReactEditor.findPath(editor, placementNode);\n      const listSize=nodes[1][0].children.length;\n      //currentNodeIndex cpatures the list-item index\n      const currentNodeIndex=nodes[2][1][1];\n      //comparison to decide to place it above or below the list\n      if(listSize/2 > currentNodeIndex){\n        if(clauseNodeAndPath[1] > placementNodePath[0]){\n          Transforms.moveNodes(editor, { at: clauseNodeAndPath[1], to: placementNodePath });\n        }else{\n          Transforms.moveNodes(editor, { at: clauseNodeAndPath[1], to: [placementNodePath[0] - 1] });\n        }\n      }else{\n        if(clauseNodeAndPath[1] > placementNodePath[0]){\n          Transforms.moveNodes(editor, { at: clauseNodeAndPath[1], to: [placementNodePath[0] + 1] });\n        }else{\n          Transforms.moveNodes(editor, { at: clauseNodeAndPath[1], to: placementNodePath });\n        }\n      }\n    }else{\n      // first node is root editor so second will be top level after root editor\n    const topLevelNodeAndPath = nodes[1];\n    // if no top level after editor then the node was already a top level node so use its own path\n    const topLevelPath = topLevelNodeAndPath ? topLevelNodeAndPath[1] : path;\n    if (topLevelPath.length) {\n      Transforms.select(editor, topLevelPath);\n    } else {\n      // if top level is empty array then we are at the editor level & should use the target range\n      Transforms.select(editor, targetRange);\n    }\n\n    let edge = 'end';\n    // if at the top level node, use the offset to determine which half we are in\n    if (topLevelPath === path || (path[1] === 0 && path[0] === topLevelPath[0])) {\n      const midpoint = Node.get(editor, targetRange.focus.path).text.length / 2;\n      if (targetRange.focus.offset < midpoint) {\n        edge = 'start';\n      }\n    } else { // if not at the top level node\n      // divy up the children & see where the target child is in relation to middle child\n      const midChild = [...Node.children(editor, topLevelPath)].length / 2;\n      if (path[1] < midChild) {\n        edge = 'start';\n      }\n    }\n    Transforms.collapse(editor, { edge });\n    Transforms.removeNodes(editor, { at: sourceRange.anchor.path, match: n => n.type === CLAUSE });\n    Transforms.insertNodes(editor, clauseNodeAndPath[0]);\n    }\n    return false;\n  };\n\n  // console.log('value: ', JSON.stringify(props.value));\n\n  return (\n    // <ClauseContext.Provider value={hoveringFormulaContract}>\n    <MarkdownEditor\n      augmentEditor={augmentEditor}\n      isEditable={isEditable}\n      value={props.value || contractProps.value}\n      onChange={props.onChange || contractProps.onChange}\n      customElements={customElements}\n      lockText={props.lockText}\n      readOnly={props.readOnly}\n      canBeFormatted={editor => !props.lockText || !editor.isInsideClause()}\n      canCopy={canCopy}\n      canKeyDown={canKeyDown}\n      onDragStart={onDragStart}\n      onDragOver={onDragOver}\n      onDrop={onDrop}\n      activeButton={props.activeButton}\n      data-testid='editor'\n  />\n  // </ClauseContext.Provider>\n  );\n};\n\n\n/**\n * The property types for this component\n */\nContractEditor.propTypes = {\n  activeButton: PropTypes.object,\n  augmentEditor: PropTypes.func,\n  value: PropTypes.array,\n  onChange: PropTypes.func,\n  lockText: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  pasteToContract: PropTypes.func,\n  clauseMap: PropTypes.object,\n  clauseProps: PropTypes.shape({\n    CLAUSE_DELETE_FUNCTION: PropTypes.func,\n    CLAUSE_EDIT_FUNCTION: PropTypes.func,\n    CLAUSE_TEST_FUNCTION: PropTypes.func,\n  }),\n  onClauseUpdated: PropTypes.func,\n  onUndoOrRedo: PropTypes.func,\n  plugins: PropTypes.arrayOf(PropTypes.shape({\n    onEnter: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    name: PropTypes.string.isRequired,\n    augmentSchema: PropTypes.func,\n  })),\n};\n\nexport default ContractEditor;\n"],"names":["module","arr","len","length","i","arr2","Array","exports","isArray","arrayLikeToArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","obj","key","value","defineProperty","enumerable","configurable","writable","_i","_s","_e","_arr","_n","_d","next","done","push","err","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_extends","assign","target","arguments","source","hasOwnProperty","apply","this","strings","raw","freeze","defineProperties","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ClauseWrapper","styled","div","props","error","ClauseConditional","svg","currentHover","ClauseConditionalTooltip","span","tooltipHeight","caretTop","caretLeft","ClauseOptional","ClauseOptionalTooltip","ClauseHeader","ClauseBody","ClauseIcon","hovering","clauseIconColor","DragIcon","position","IconWrapper","TestWrapper","EditWrapper","DeleteWrapper","DragWrapper","HeaderToolTipWrapper","HeaderToolTip","attrs","contentEditable","suppressContentEditableWarning","HeaderToolTipText","titleGenerator","input","toUpperCase","titleCaps","replace","titleSpacer","lastIndexOf","titleStart","indexOf","titleEnd","titleReducer","childReducer","children","reduce","acc","cur","text","ClauseContext","createContext","ClauseComponent","React","forwardRef","clauseProps","create","useState","hoveringHeader","setHoveringHeader","hoveringTestIcon","setHoveringTestIcon","hoveringEditIcon","setHoveringEditIcon","hoveringDeleteIcon","setHoveringDeleteIcon","title","templateUri","header","templateTitle","inputTitle","headerGenerator","HEADER_TITLE","iconWrapperProps","userSelect","testIconProps","testIcon","width","height","viewBox","ICON_HOVER_COLOR","editIconProps","editIcon","deleteIconProps","deleteIcon","dragIconProps","dragIcon","upIconProps","upIcon","downIconProps","downIcon","handleClick","event","down","node","ReactEditor","toSlateNode","editor","path","findPath","range","Editor","documentEnd","end","newPath","Math","max","anchor","focus","Transforms","moveNodes","at","to","Provider","S.ClauseWrapper","src","id","className","readOnly","padding","draggable","attributes","S.ClauseHeader","S.HeaderToolTipWrapper","S.HeaderToolTip","S.HeaderToolTipText","onMouseEnter","onMouseLeave","S.DragWrapper","S.DragIcon","onClick","stroke","strokeWidth","fillRule","transform","points","fill","x","y","cx","cy","r","e","S.TestWrapper","CLAUSE_TEST_FUNCTION","S.ClauseIcon","d","S.EditWrapper","CLAUSE_EDIT_FUNCTION","S.DeleteWrapper","CLAUSE_DELETE_FUNCTION","S.ClauseBody","displayName","propTypes","PropTypes","shape","string","object","isRequired","func","any","bool","CLAUSE","VARIABLE","INLINES","VOIDS","withClauseSchema","isVoid","isInline","element","inVariable","selection","isEqual","Node","parent","isReadOnlyVariable","variableNode","Decorators","data","getDecoratorValue","override","sourceKey","destination","destinationKey","undefined","VariableWrapper","border","opacity","Variable","isFormulaDependency","variableStyles","getArguments","getDecoratorArguments","VARIABLE_PROPS","icon","fillOpacity","filter","xlinkHref","strokeLinejoin","ConditionalBoolean","hoveringConditional","setHoveringConditional","setTooltipHeight","useRef","useEffect","current","offsetHeight","conditionalIconProps","conditionalIcon","toggleConditional","conditionalTooltip","marginTop","Consumer","hoveringClause","whenTrue","ConditionalSwitch","trueHasLength","falseHasLength","whenFalse","tooltipText","isTrue","isContentShowing","Conditional","useEditor","setHovering","conditionalPath","isNotReadOnly","newConditional","withoutNormalizing","removeNodes","insertNodes","conditionalProps","conditionalSwitchProps","OptionalBoolean","hoveringOptional","setHoveringOptional","optionalIconProps","optionalIcon","toggleOptional","optionalTooltip","whenSome","OptionalSwitch","hasSome","hasNone","tooltipInstructions","Optional","optionalPath","optionalReverse","whenNone","TARGET_NODE","TARGET_PATH","ancestors","reverse","isOptionalVariable","swapOptional","optionalProps","optionalSwitchProps","FormulaTooltip","Formula","setFormulaNode","setHoveringFormulaContract","hoveringFormula","setHoveringFormula","wrapperProps","formulaProps","formulaTooltip","code","getChildren","matcher","result","forEach","concat","withClauses","withClausesProps","insertData","onChange","onClauseUpdated","pasteToContract","getClauseWithPath","location","nodes","match","clauseNodeAndPath","isInsideClause","clauseNode","variable","variableName","variableIterator","entry","Path","equals","newNode","JSON","parse","stringify","HistoryEditor","withoutSaving","then","operation","formulasIterator","dependencies","includes","formulaEntry","newFormula","search","formulas","findFormula","oldFormulaValue","setNodes","HTML_DOM","getData","clausesToParseAndPaste","htmlTransformer","HtmlTransformer","slateTransformer","SlateTransformer","NEW_SLATE_DOM","fromCiceroMark","toCiceroMark","map","child","clauseid","uuidv4","clause","NEW_HTML_DOM","toHtml","format","console","isClauseSupported","_recursive","params","childType","kind","Error","depth","canAddClause","withVariables","insertText","nextNode","previousNode","textLength","get","readOnlyNext","readOnlyParent","offset","select","collapse","edge","isEditableVariable","lockText","editable","inReadOnlyVariable","atEnd","inputType","contractProps","marks","localStorage","setItem","toJSON","plugins","ContractEditor","hoveringFormulaContract","formulaNode","useCallback","formulaClauseName","isVariableFormulaDependency","formulaPATH","variablePATH","MarkdownEditor","augmentEditor","isEditable","parseable","isEditableClause","customElements","CLAUSE_PROPS","CONDITIONAL_PROPS","FORMULA_PROPS","OPTIONAL_PROPS","canBeFormatted","canCopy","canKeyDown","keyCode","charCode","Point","start","previous","onDragStart","stopPropagation","dataTransfer","setData","onDragOver","dropEffect","onDrop","preventDefault","targetRange","findEventRange","sourceRange","placementNodeType","placementNode","placementNodePath","topLevelNodeAndPath","topLevelPath","midpoint","midChild","_toConsumableArray","activeButton","array","clauseMap","onUndoOrRedo","arrayOf","onEnter","onKeyDown","augmentSchema"],"mappings":"k+BAUAA,UAVA,SAA2BC,EAAKC,IACnB,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,GAITL,EAAOO,QAAiB,QAAIP,EAAOO,QAASP,sBAA4B,+BCLxEA,UAJA,SAA4BC,GAC1B,GAAIK,MAAME,QAAQP,GAAM,OAAOQ,EAAiBR,IAIlDD,EAAOO,QAAiB,QAAIP,EAAOO,QAASP,sBAA4B,+BCHxEA,UAJA,SAA0BU,GACxB,GAAsB,oBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOJ,MAAMO,KAAKH,IAItHV,EAAOO,QAAiB,QAAIP,EAAOO,QAASP,sBAA4B,+BCMxEA,UATA,SAAqCc,EAAGC,GACtC,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOL,EAAiBK,EAAGC,GACtD,IAAIC,EAAIC,OAAOC,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAI,GAEpD,MADU,WAANL,GAAkBF,EAAEQ,cAAaN,EAAIF,EAAEQ,YAAYC,MAC7C,QAANP,GAAqB,QAANA,EAAoBV,MAAMO,KAAKC,GACxC,cAANE,GAAqB,2CAA2CQ,KAAKR,GAAWP,EAAiBK,EAAGC,QAAxG,IAIFf,EAAOO,QAAiB,QAAIP,EAAOO,QAASP,sBAA4B,+BCRxEA,UAJA,WACE,MAAM,IAAIyB,UAAU,yIAItBzB,EAAOO,QAAiB,QAAIP,EAAOO,QAASP,sBAA4B,iCCOxEA,UAJA,SAA4BC,GAC1B,OAAOyB,EAAkBzB,IAAQ0B,EAAgB1B,IAAQ2B,EAA2B3B,IAAQ4B,KAI9F7B,EAAOO,QAAiB,QAAIP,EAAOO,QAASP,sBAA4B,yBCExEA,UAfA,SAAyB8B,EAAKC,EAAKC,GAYjC,OAXID,KAAOD,EACTb,OAAOgB,eAAeH,EAAKC,EAAK,CAC9BC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAOC,EAGNF,GAIT9B,EAAOO,QAAiB,QAAIP,EAAOO,QAASP,sBAA4B,uBCZxEA,UAJA,SAAyBC,GACvB,GAAIK,MAAME,QAAQP,GAAM,OAAOA,GAIjCD,EAAOO,QAAiB,QAAIP,EAAOO,QAASP,sBAA4B,+BCyBxEA,UA9BA,SAA+BC,EAAKG,GAClC,IAAIiC,EAAKpC,IAA0B,oBAAXU,QAA0BV,EAAIU,OAAOC,WAAaX,EAAI,eAE9E,GAAU,MAANoC,EAAJ,CACA,IAIIC,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKL,EAAKA,EAAGjB,KAAKnB,KAAQwC,GAAMH,EAAKD,EAAGM,QAAQC,QAC9CJ,EAAKK,KAAKP,EAAGN,QAET5B,GAAKoC,EAAKrC,SAAWC,GAH4BqC,GAAK,IAK5D,MAAOK,GACPJ,GAAK,EACLH,EAAKO,UAEL,IACOL,GAAsB,MAAhBJ,EAAW,QAAWA,EAAW,iBAE5C,GAAIK,EAAI,MAAMH,GAIlB,OAAOC,IAITxC,EAAOO,QAAiB,QAAIP,EAAOO,QAASP,sBAA4B,+BC3BxEA,UAJA,WACE,MAAM,IAAIyB,UAAU,8IAItBzB,EAAOO,QAAiB,QAAIP,EAAOO,QAASP,sBAA4B,iCCOxEA,UAJA,SAAwBC,EAAKG,GAC3B,OAAO2C,EAAe9C,IAAQ+C,EAAqB/C,EAAKG,IAAMwB,EAA2B3B,EAAKG,IAAM6C,KAItGjD,EAAOO,QAAiB,QAAIP,EAAOO,QAASP,sBAA4B,yBCbxE,SAASkD,IAgBP,OAfAlD,UAAiBkD,EAAWjC,OAAOkC,QAAU,SAAUC,GACrD,IAAK,IAAIhD,EAAI,EAAGA,EAAIiD,UAAUlD,OAAQC,IAAK,CACzC,IAAIkD,EAASD,UAAUjD,GAEvB,IAAK,IAAI2B,KAAOuB,EACVrC,OAAOC,UAAUqC,eAAenC,KAAKkC,EAAQvB,KAC/CqB,EAAOrB,GAAOuB,EAAOvB,IAK3B,OAAOqB,GAGTpD,EAAOO,QAAiB,QAAIP,EAAOO,QAASP,sBAA4B,EACjEkD,EAASM,MAAMC,KAAMJ,WAG9BrD,UAAiBkD,EACjBlD,EAAOO,QAAiB,QAAIP,EAAOO,QAASP,sBAA4B,yBCRxEA,UAZA,SAAgC0D,EAASC,GAKvC,OAJKA,IACHA,EAAMD,EAAQrC,MAAM,IAGfJ,OAAO2C,OAAO3C,OAAO4C,iBAAiBH,EAAS,CACpDC,IAAK,CACH3B,MAAOf,OAAO2C,OAAOD,QAM3B3D,EAAOO,QAAiB,QAAIP,EAAOO,QAASP,sBAA4B,MCbxE,SAAS8D,EAAYC,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,0XCpBvC,OAAMe,GAAgBC,EAAOC,2dAKxB,SAAAC,UAAUA,EAAMC,MAAQ,oBAAsB,uBAa7CC,IAJWJ,EAAOK,0CACf,SAAAH,UAAUA,EAAMI,aAAe,UAAY,YAG1BN,EAAOK,0CACxB,SAAAH,UAAUA,EAAMI,aAAe,UAAY,aAG9CC,GAA2BP,EAAOQ,qfAC/B,SAAAN,UAAUA,EAAMI,aAAe,UAAY,YAC1C,SAAAJ,UAASA,EAAMO,iBAKrB,SAAAP,UAASA,EAAMQ,YACd,SAAAR,UAASA,EAAMS,UAAY,KAS5B,SAAAT,UAASA,EAAMQ,YACd,SAAAR,UAASA,EAAMS,aAOdC,GAAiBZ,EAAOK,0CACrB,SAAAH,UAAUA,EAAMI,aAAe,UAAY,YAG9CO,GAAwBb,EAAOQ,qfAC5B,SAAAN,UAAUA,EAAMI,aAAe,UAAY,YAC1C,SAAAJ,UAASA,EAAMO,iBAKrB,SAAAP,UAASA,EAAMQ,YACd,SAAAR,UAASA,EAAMS,UAAY,KAS5B,SAAAT,UAASA,EAAMQ,YACd,SAAAR,UAASA,EAAMS,aAOdG,GAAed,EAAOC,iXACnB,SAAAC,UAAUA,EAAMI,aAAe,UAAY,YAe9CS,GAAaf,EAAOC,uNAYpBe,GAAahB,EAAOK,8FAIvB,SAAAH,UAAUA,EAAMe,SAAWf,EAAMgB,iBAAmB,UAAY,aAG7DC,GAAWnB,EAAOgB,GAAPhB,iHAGf,SAAAE,0BAAUA,EAAMkB,yBAAa,KAMhCC,GAAcrB,EAAOC,gQACX,SAAAC,UAAUA,EAAMI,aAAe,UAAY,YAW9CgB,GAActB,EAAOqB,GAAPrB,gEAIduB,GAAcvB,EAAOqB,GAAPrB,gEAIdwB,GAAgBxB,EAAOqB,GAAPrB,kEAIhByB,GAAczB,EAAOqB,GAAPrB,0PAwBd0B,IAZY1B,EAAOK,mJAYIL,EAAOC,+EAM9B0B,GAAgB3B,EAAOC,IAAI2B,MAAM,CAC5CC,gBAAiB,QACjBC,+BAAgC,QAFL9B,4fA2BhB+B,GAAoB/B,EAAOQ,yBC1M3BhB,GAAO,iBAAM,SCAbA,GAAO,iBAAM,QCAbA,GAAO,iBAAM,QCAbA,GAAO,iBAAM,QCAbA,GAAO,iBAAM,WCAbA,GAAO,iBAAM,aCIbwC,GAAiB,SAACC,UAFb,SAAAA,UAASA,EAAMC,cAKZC,CAND,SAAAF,UAASA,EAAMG,QAAQ,KAAM,KAK3BC,CAND,SAAAJ,UAASA,EAAM3F,MAFjB,SAAA2F,UAASA,EAAMK,YAAY,KAEHC,CAAWN,GAAS,EAD9C,SAAAA,UAASA,EAAMO,QAAQ,KAC2BC,CAASR,IAKrDS,CAAaT,MAavBU,GAAe,SAACC,UAAaA,EAASC,QAAO,SAACC,EAAKC,mBAAWD,UAAMC,EAAIC,QAAQ,KCIhFC,GAAgBC,EAAc,MAOrCC,GAAkBC,EAAMC,YAAW,SAACnD,EAAOjB,OACzCqE,EAAcpD,EAAMoD,aAAepH,OAAOqH,OAAO,QAGvBC,GAAS,YAAlCvC,eACqCuC,GAAS,aAA9CC,OAAgBC,SACyBF,GAAS,YAAlDG,OAAkBC,SACuBJ,GAAS,YAAlDK,OAAkBC,SAC2BN,GAAS,YAAtDO,OAAoBC,OAGrBC,EAAQjC,GAAe9B,EAAMgE,aAC7BC,ED9BuB,SAACC,EAAeC,OACvCJ,EAAQjC,GAAeoC,GACvBD,EAASE,EAAcJ,EAAQI,EAAcJ,SAC1BE,EAAO/I,OAAS,aAAU+I,EAAO7H,MAAM,EAAG,WAAY6H,EC2BhEG,CAAgBpE,EAAMgE,YAAaZ,EAAYiB,cACxDC,EAAmB,CACvBlE,aAAcW,EACdY,iBAAiB,EACjBC,gCAAgC,EAChCxC,MAAO,CAAEmF,WAAY,SAGjBC,EAAgB,cACNC,GACdC,MAAO,OACPC,OAAQ,OACRC,QAAS,YACT5D,gBAAiBoC,EAAYyB,kBAGzBC,EAAgB,cACNC,GACdL,MAAO,OACPC,OAAQ,OACRC,QAAS,YACT5D,gBAAiBoC,EAAYyB,kBAGzBG,EAAkB,cACRC,GACdP,MAAO,OACPC,OAAQ,OACRC,QAAS,YACT5D,gBAAiBoC,EAAYyB,kBAGzBK,EAAgB,cACNC,GACdT,MAAO,OACPC,OAAQ,OACRC,QAAS,aAGLQ,EAAc,cACJC,GACdX,MAAO,OACPC,OAAQ,OACRC,QAAS,aAGLU,EAAgB,cACNC,GACdb,MAAO,OACPC,OAAQ,OACRC,QAAS,aAGLY,EAAc,SAACC,EAAOC,OACpBC,EAAOC,EAAYC,YAAY7F,EAAM8F,OAAQL,EAAMtH,QACnD4H,EAAOH,EAAYI,SAAShG,EAAM8F,OAAQH,GAC1CM,EAAQC,EAAOD,MAAMjG,EAAM8F,OAAQC,GACnCI,EAAcD,EAAOE,IAAIpG,EAAM8F,OAAQ,IACvCO,EAAU,CAACC,KAAKC,IAAIN,EAAMO,OAAOT,KAAK,GAAIE,EAAMQ,MAAMV,KAAK,KAAOL,EAAO,GAAK,IAChFW,EAAQ,IAAM,GAAKA,EAAQ,IAAMF,EAAYJ,KAAK,IACpDW,EAAWC,UAAU3G,EAAM8F,OAAQ,CAAEc,GAAIb,EAAMc,GAAIR,YAMrDnD,gBAACH,GAAc+D,UAAS/J,MAAOgE,GAC7BmC,gBAAC6D,MACCC,IAAKhH,EAAMgE,YACXiD,GAAIjH,EAAM1D,KACV4K,+CAAyClH,EAAMC,MAAQ,QAAU,IAGjEb,MAAO,CAAEmF,qBAAevE,EAAMmH,SAAS,OAAO,QAAUC,QAAS,OACjEC,UAAU,QACVtI,IAAKA,EACLkB,MAAOD,EAAMC,OACTD,EAAMsH,YAcVpE,gBAACqE,IACCL,UAAU,oCACV9G,aAAcW,EACdY,iBAAiB,EACjBC,gCAAgC,EAChCxC,MAAO,CAAEmF,WAAY,SAEnBhB,GAAkBU,EAAO/I,OAAS,IAC/BgI,gBAACsE,QACFtE,gBAACuE,QACE1D,EAAQX,EAAYiB,eAI3BnB,gBAACwE,IACCC,aAAc,kBAAMnE,GAAkB,IACtCoE,aAAc,kBAAMpE,GAAkB,KAErCS,IAGHjE,EAAMmH,UACe,IAAlBlD,EAAO/I,OAkFJ,KAlFmBgI,gCACrBA,gBAAC2E,GACKvD,EAENpB,gBAAC4E,QACK1C,GACJlE,UAAW,EACX6G,QAASvC,IH9JrBtC,qBAAG+D,GAAG,wBAAwBe,OAAO,OAAOC,YAAY,IAAIC,SAAS,WACjEhF,qBAAG+D,GAAG,gBAAgBkB,UAAU,uCAC5BjF,qBAAG+D,GAAG,UAAUkB,UAAU,qCACtBjF,qBAAG+D,GAAG,aACF/D,2BAAS+D,GAAG,QAAQiB,SAAS,UAAUE,OAAO,iDAC9ClF,2BAAS+D,GAAG,QAAQmB,OAAO,sBAAsBC,KAAK,cG6J5DnF,gBAAC4E,GAAe5C,EJlK1BhC,qBAAG+D,GAAG,wBAAwBe,OAAO,OAAOC,YAAY,IAAIC,SAAS,WACjEhF,qBAAG+D,GAAG,gBAAgBkB,UAAU,uCAC5BjF,qBAAG+D,GAAG,SAASkB,UAAU,qCACrBjF,wBAAM+D,GAAG,YAAYqB,EAAE,IAAIC,EAAE,IAAI7D,MAAM,KAAKC,OAAO,KAAK0D,KAAK,SAC7DnF,qBAAG+D,GAAG,UAAUkB,UAAU,gCAAgCD,SAAS,WAC/DhF,0BAAQ+D,GAAG,OAAOuB,GAAG,MAAMC,GAAG,MAAMC,EAAE,QACtCxF,0BAAQ+D,GAAG,cAAcuB,GAAG,MAAMC,GAAG,MAAMC,EAAE,QAC7CxF,0BAAQ+D,GAAG,YAAYuB,GAAG,MAAMC,GAAG,MAAMC,EAAE,QAC3CxF,0BAAQ+D,GAAG,cAAcuB,GAAG,MAAMC,GAAG,MAAMC,EAAE,QAC7CxF,0BAAQ+D,GAAG,cAAcuB,GAAG,MAAMC,GAAG,OAAOC,EAAE,QAC9CxF,0BAAQ+D,GAAG,cAAcuB,GAAG,MAAMC,GAAG,OAAOC,EAAE,QAC9CxF,0BAAQ+D,GAAG,cAAcuB,GAAG,MAAMC,GAAG,OAAOC,EAAE,QAC9CxF,0BAAQ+D,GAAG,cAAcuB,GAAG,MAAMC,GAAG,OAAOC,EAAE,aIyJpDxF,gBAAC4E,QACKxC,GACJpE,UAAW,GACX6G,QAAS,SAACY,UAAMnD,EAAYmD,GAAG,MFxK3CzF,qBAAG+D,GAAG,wBAAwBe,OAAO,OAAOC,YAAY,IAAIC,SAAS,WACjEhF,qBAAG+D,GAAG,gBAAgBkB,UAAU,uCAC5BjF,qBAAG+D,GAAG,YAAYkB,UAAU,qCACxBjF,qBAAG+D,GAAG,cACN/D,2BAAS+D,GAAG,QAAQiB,SAAS,UAAUE,OAAO,uDAC9ClF,2BAAS+D,GAAG,QAAQmB,OAAO,sBAAsBC,KAAK,cEwK1DnF,gBAAC0F,QACKtE,GACJqD,aAAc,kBAAMjE,GAAoB,IACxCkE,aAAc,kBAAMlE,GAAoB,IACxCqE,QAAS,kBAAM3E,EAAYyF,qBAAqB7I,MAEhDkD,gBAAC4F,QACKtE,GACJzD,SAAU0C,ILrLtBP,qBAAG+D,GAAG,wBAAwBe,OAAO,OAAOC,YAAY,IAAIC,SAAS,WACjEhF,qBAAG+D,GAAG,8BAA8BiB,SAAS,WACzChF,wBAAM6F,EAAE,s9CAAs9C9B,GAAG,aKuL79CxD,GACGP,gBAACsE,QACFtE,gBAACuE,kBAMPvE,gBAAC8F,QACK1E,GACJqD,aAAc,kBAAM/D,GAAoB,IACxCgE,aAAc,kBAAMhE,GAAoB,IACxCmE,QAAS,kBAAM3E,EAAY6F,qBAAqBjJ,MAEhDkD,gBAAC4F,QACKhE,GACJ/D,SAAU4C,INzMtBT,qBAAG+D,GAAG,wBAAwBe,OAAO,OAAOC,YAAY,IAAIC,SAAS,WACjEhF,wBAAM6F,EAAE,2zBAA2zB9B,GAAG,aAAaiB,SAAS,cM4Mp1BvE,GACGT,gBAACsE,QACFtE,gBAACuE,kBAMPvE,gBAACgG,QACK5E,GACJqD,aAAc,kBAAM7D,GAAsB,IAC1C8D,aAAc,kBAAM9D,GAAsB,IAC1CiE,QAAS,kBAAM3E,EAAY+F,uBAAuBnJ,MAElDkD,gBAAC4F,QACK9D,GACJjE,SAAU8C,IP7NtBX,qBAAG8E,OAAO,OAAOC,YAAY,IAAIC,SAAS,WACtChF,qBAAGiF,UAAU,sCAAsCD,SAAS,WACxDhF,wBAAM6F,EAAE,olCO+NJlF,GACGX,gBAACsE,QACFtE,gBAACuE,qBAQXvE,gBAACkG,QAIEpJ,EAAM0C,eAOjBO,GAAgBoG,YAAc,kBAE9BpG,GAAgBqG,UAAY,CAC1BhC,WAAYiC,EAAUA,UAAUC,MAAM,YACxBD,EAAUE,SAExB/G,SAAU6G,EAAUA,UAAUG,OAAOC,WACrCrN,KAAMiN,EAAUE,OAChBrG,YAAamG,EAAUC,MAAM,CAC3BL,uBAAwBI,EAAUK,KAClCX,qBAAsBM,EAAUK,KAChCf,qBAAsBU,EAAUK,OAElC9D,OAAQyD,EAAUM,IAClB5J,MAAOsJ,EAAUO,KACjB3C,SAAUoC,EAAUO,KACpB9F,YAAauF,EAAUE,OAAOE,YC3QzB,OAAMI,GAAS,SACTC,GAAW,WAKlBC,YACHD,IAAW,QALa,eAMV,QALO,YAMV,QALS,WAMV,OAEPE,GAAQ,GAGRC,GAAmB,SAACrE,OAChBsE,EAAqBtE,EAArBsE,OAAQC,EAAavE,EAAbuE,gBAChBvE,EAAOsE,OAAS,SAAAE,UAAYJ,GAAMI,EAAQhL,OAAS8K,EAAOE,IAC1DxE,EAAOuE,SAAW,SAAAC,UAAYL,GAAQK,EAAQhL,OAAS+K,EAASC,IAEzDxE,GChBHyE,GAAa,SAACzE,OACV0E,EAAc1E,EAAd0E,kBACHA,MAEAC,EAAQD,EAAUhE,OAAOT,KAAMyE,EAAU/D,MAAMV,OAC7C2E,EAAKC,OAAO7E,EAAQA,EAAO0E,UAAU/D,MAAMV,MAAMzG,OAAS0K,KCLtDY,GAAqB,SAACC,cAGwC,IADpD,IAAIC,EAAWD,EAAaE,MAC5BC,kBAAkB,iBAAkB,YACvD,MAAOnN,UACA,ukBCSX,IAAMoN,GAAW,SAAC5M,EAAQ6M,EAAWC,EAAaC,QACtBC,IAAtBhN,EAAO6M,KACTC,EAAYC,GAAkBF,GAAa7M,EAAO6M,KAIhDI,GAAkBxL,EAAOQ,wIACnB,SAAAN,UAASA,EAAMuL,UACL,SAAAvL,UAASA,EAAM,uBACxB,SAAAA,UAASA,EAAMwL,WACxB,SAAAxL,UAASA,EAAM,qCAAgCA,EAAM,8BAA8B,MAGjFyL,GAAWvI,EAAMC,YAAW,SAACnD,EAAOjB,OAEtCuI,EAKEtH,EALFsH,WACA5E,EAIE1C,EAJF0C,SACAoD,EAGE9F,EAHF8F,OACAwE,EAEEtK,EAFFsK,QACAoB,EACE1L,EADF0L,oBAGIC,ED3B6B,SAACd,cAEf,IAAIC,EAAWD,EAAaE,MAC7Ba,aAAa,kBAC/B,MAAO/N,SACA,ICsBcgO,CAAsBvB,GACvClL,EAAQ,GAEdA,EAAMmM,OADe,UAErBnM,EAAM,oBAAsB,UAC5BA,EAAMmM,OAHe,UAIrBnM,EAAMoM,QAAU,EAEZE,EAAoB5F,EAAQwE,KAC9BlL,EAAMmM,OAAS,UACfnM,EAAM,oBAAsB,UAC5BA,EAAMmM,OATa,WAajBI,IACFV,GAASU,EAAgB,SAAUvM,GACnC6L,GAASU,EAAgB,kBAAmBvM,EAAO,oBACnD6L,GAASU,EAAgB,UAAWvM,GACpC6L,GAASU,EAAgB,aAAcvM,EAAO,oBAG1C0M,YACJ5E,UAAW8C,GACX1N,KAAMgO,EAAQS,KAAKzO,MAChBgL,GACAlI,OACHL,IAAAA,WAGMmE,gBAACoI,GAAoBQ,EAAiBpJ,MAGhD+I,GAASpC,YAAc,WAEvBoC,GAASnC,UAAY,CACnBhC,WAAYiC,EAAUA,UAAUC,MAAM,YACxBD,EAAUE,SAExB/G,SAAU6G,EAAUG,OAAOC,WAC3B7D,OAAQyD,EAAUM,IAClBS,QAASf,EAAUM,IACnB6B,oBAAqBnC,EAAUK,MChF1B,IAAMtK,GAAO,iBAAM,kBAEbyM,GAAO,SAAAhL,UAChBmC,qBAAG+D,GAAG,SAASe,OAAO,OAAOC,YAAY,IAAII,KAAK,OAAOH,SAAS,WAC9DhF,qBAAG+D,GAAG,2BAA2BkB,UAAU,gCAAgCD,SAAS,WAChFhF,qBAAG+D,GAAG,QACF/D,uBAAKmF,KAAK,QAAQ2D,YAAY,IAAIC,OAAO,iBAAiBC,UAAU,YACpEhJ,0BAAQ8E,OAAQjH,EAAW,UAAY,UAAWkH,YAAY,IAAIkE,eAAe,SAAS9D,KAAMtH,EAAW,UAAY,UAAWmH,SAAS,UAAUM,GAAG,IAAIC,GAAG,IAAIC,EAAE,SAEzKxF,2BAAS+D,GAAG,SAASoB,KAAMtH,EAAW,UAAY,UAAWqH,OAAO,2MCI1EgE,GAAqB,SAACpM,SAC4BsD,GAAS,YAAxD+I,OAAqBC,SACchJ,EAAS,YAA5C/C,OAAegM,OAChBxN,EAAMyN,EAAO,MAEnBC,GAAU,WACRF,EAAiBxN,EAAI2N,QAAU3N,EAAI2N,QAAQC,aAAe,KACzD,QAEGC,EAAuB,cACbC,GACdjI,QAAS,YACTsC,UAAW,kBACXS,aAAc,kBAAM2E,GAAuB,IAC3C1E,aAAc,kBAAM0E,GAAuB,IAC3CvE,QAAS/H,EAAM8M,mBAGXC,EAAqB,CACzBhO,IAAAA,EACAqB,aAAciM,EACdnF,UAAW,kBACX9H,MAAO,CAAE4N,qBAAezM,EAAgB,UACxCC,SAAUD,EAAgB,EAC1BE,UAAW,UAIXyC,gBAACH,GAAckK,eACX,SAAAC,UAAmBhK,gCACnBA,gBAAC7C,MACCsB,iBAAiB,GACboL,kBAES/M,EAAMmN,cAErBjK,gBAAChD,MACCyB,iBAAiB,EACjBvB,aAAc8M,GACVN,GAEHC,GAAqBR,SAOhCD,GAAmB9C,UAAY,CAC7B6D,SAAU5D,EAAUE,OACpBqD,kBAAmBvD,EAAUK,MClD/B,IAAMwD,GAAoB,SAACpN,OAWI8C,EAVvBiK,EAAqB,CACzB7F,UAAW,kBACX9G,aAAcJ,EAAMI,aACpBI,SAAU,GACVC,UAAW,EACXF,cAAe,MAEX8M,EAAgB5K,GAAazC,EAAMmN,UAAUjS,OAC7CoS,EAAiB7K,GAAazC,EAAMuN,WAAWrS,OAC/CsS,EAAcxN,EAAMyN,OAAShL,GAAazC,EAAMuN,WAAa9K,GAAazC,EAAMmN,iBAQpFjK,gCACEA,gBAAC7C,MACCsB,iBAAiB,GACboL,IAVmBjK,EAYF0K,EAXrBH,GAAiBC,wBAAsCxK,OACvD9C,EAAM0N,iBAAyB,kCACb5K,8kBAe1BsK,GAAkB9D,UAAY,CAC5BlJ,aAAcmJ,EAAUO,KACxB4D,iBAAkBnE,EAAUO,KAC5BqD,SAAU5D,EAAUE,OACpB8D,UAAWhE,EAAUE,OACrBgE,OAAQlE,EAAUO,MC5BpB,IAAM6D,GAAczK,EAAMC,YAAW,SAACnD,EAAOjB,OAEzCuI,EAIEtH,EAJFsH,WACA5E,EAGE1C,EAHF0C,SACqBiD,EAEnB3F,EAFF0C,SAAY1C,MAAS2F,KACQoF,EAC3B/K,EADF0C,SAAY1C,MAAS2F,KAAQoF,KAEzBjF,EAAS8H,MACiBtK,GAAS,YAAlCvC,OAAU8M,OACXC,EAAkBlI,EAAYI,SAASF,EAAQH,GAC/CoI,GAAiB/N,EAAMmH,SACvBuG,EAAmB3C,EAAK0C,SACxBhL,GAAasI,EAAKoC,UAAUjS,SAC5BuH,GAAasI,EAAKwC,WAAWrS,OAE7B4R,EAAoB,SAAC/G,OACnBiI,EAAiB,CACrBtE,OAAQ,SACRpK,KPrCqB,cOsCrByL,KAAM,CACJzO,KAAMyO,EAAKzO,KACX6Q,SAAUpC,EAAKoC,SACfI,UAAWxC,EAAKwC,UAChBE,QAAS1C,EAAK0C,QAEhB/K,SAAUqI,EAAK0C,OAAS1C,EAAKwC,UAAYxC,EAAKoC,UAEhDjH,EAAO+H,mBAAmBnI,GAAQ,WAChCY,EAAWwH,YAAYpI,EAAQ,CAAEc,GAAIb,IACrCW,EAAWyH,YAAYrI,EAAQkI,EAAgB,CAAEpH,GAAIb,QAInDqI,SACJnH,GAAI8D,EAAKzO,KACT4K,UAAWwG,EPtDY,cOsDqB,GAC5C/F,aAAc,kBAAMkG,GAAY,IAChCjG,aAAc,kBAAMiG,GAAY,IAChC9F,QAAS,kBAAM+E,EAAkBgB,KAC9BxG,OACHvI,IAAAA,IAGIsP,MACJjO,aAAcW,EACd2M,iBAAAA,GACG3C,GAEC6B,EAAuB,CAC3BxM,aAAcW,EACdoM,SAAU1K,GAAasI,EAAKoC,UAC5BL,kBAAmB,kBAAMA,EAAkBgB,YAI3C5K,uBAAUoE,EACRyG,IAAkBL,EAChBxK,gBAACkK,GAAsBiB,GACvBnL,gBAACkJ,GAAuBQ,IACxB1J,uBAAUkL,EAAmB1L,OAKrCiL,GAAYtE,YAAc,cAE1BsE,GAAYrE,UAAY,CACtBhC,WAAYiC,EAAUA,UAAUC,MAAM,YACxBD,EAAUE,SAExB/G,SAAU6G,EAAUG,OAAOC,WAC3B7D,OAAQyD,EAAUM,IAClBlE,KAAM4D,EAAUC,MAAM,CACpBuB,KAAMxB,EAAU1M,MAElBsK,SAAUoC,EAAUO,MCjFtB,IAAMwE,GAAkB,SAACtO,SACyBsD,GAAS,YAAlDiL,OAAkBC,SACiBlL,EAAS,YAA5C/C,OAAegM,OAChBxN,EAAMyN,EAAO,MAEnBC,GAAU,WACRF,EAAiBxN,EAAI2N,QAAU3N,EAAI2N,QAAQC,aAAe,KACzD,QAEG8B,EAAoB,cACVC,GACd9J,QAAS,YACTsC,UAAW,eACXS,aAAc,kBAAM6G,GAAoB,IACxC5G,aAAc,kBAAM4G,GAAoB,IACxCzG,QAAS/H,EAAM2O,gBAGXC,EAAkB,CACtB7P,IAAAA,EACAqB,aAAcmO,EACdrH,UAAW,kBACX9H,MAAO,CAAE4N,qBAAezM,EAAgB,UACxCC,SAAUD,EAAgB,EAC1BE,UAAW,UAIXyC,gBAACH,GAAckK,eACX,SAAAC,UAAmBhK,gCACnBA,gBAACvC,MACCgB,iBAAiB,GACbiN,kBAES5O,EAAM6O,cAErB3L,gBAACxC,MACCiB,iBAAiB,EACjBvB,aAAc8M,GACVuB,GAEHC,GAAkBH,SAO7BD,GAAgBhF,UAAY,CAC1BuF,SAAUtF,EAAUE,OACpBkF,eAAgBpF,EAAUK,MCrD5B,IAAMkF,GAAiB,SAAC9O,OAChB4O,EAAkB,CACtB1H,UAAW,kBACX9G,aAAcJ,EAAMI,aACpBI,SAAU,GACVC,UAAW,EACXF,cAAe,MAEXiN,EAAcxN,EAAM+O,QAAU/O,EAAMgP,QAAUhP,EAAM+O,QACpDE,EAAsBjP,EAAM0N,iBAC9B,kCACeF,cAGjBtK,gCACEA,gBAACvC,MACCgB,iBAAiB,GACbiN,GAEHK,gmDAMTH,GAAexF,UAAY,CACzBlJ,aAAcmJ,EAAUO,KACxB4D,iBAAkBnE,EAAUO,KAC5BqD,SAAU5D,EAAUE,OACpBuF,QAASzF,EAAUE,OACnBsF,QAASxF,EAAUO,MCxBrB,OAAMoF,GAAWhM,EAAMC,YAAW,SAACnD,EAAOjB,OAEtCuI,EAIEtH,EAJFsH,WACA5E,EAGE1C,EAHF0C,SACqBiD,EAEnB3F,EAFF0C,SAAY1C,MAAS2F,KACQoF,EAC3B/K,EADF0C,SAAY1C,MAAS2F,KAAQoF,KAEzBjF,EAAS8H,MACiBtK,GAAS,YAAlCvC,OAAU8M,OACXsB,EAAevJ,EAAYI,SAASF,EAAQH,GAC5CoI,GAAiB/N,EAAMmH,SACvBuG,IAAqBhD,EAAKjB,OAAO9D,GAAMzK,OACvCkU,EAAkB,CACtB1F,OAAQ,SACRpK,KV7BoB,WU8BpByL,KAAM,CACJzO,KAAMyO,EAAKzO,KACXuS,SAAU9D,EAAK8D,SACfQ,SAAUtE,EAAKsE,SACfN,SAAUhE,EAAKgE,SAEjBrM,SAAUqI,EAAKgE,QAAUhE,EAAKsE,SAAWtE,EAAK8D,UAoB1CF,EAAiB,SAAC5I,EAAM5H,GACvBA,GAlBoB,SAACA,SACpBmR,EAAc1J,EAAYC,YAAYC,EAAQ3H,GAC9CoR,EAAc3J,EAAYI,SAASF,EAAQwJ,QAExB5E,EAAK8E,UAAU1J,EAAQyJ,EAAa,CAAEE,SAAS,oCAAS,oBAClEnQ,OAAS0K,GAAU,OAAO,wCAElC,EAWS0F,CAAmBvR,IARhB,SAAC4H,GACpBG,EAAO+H,mBAAmBnI,GAAQ,WAChCY,EAAWwH,YAAYpI,EAAQ,CAAEc,GAAIb,IACrCW,EAAWyH,YAAYrI,EAAQsJ,EAAiB,CAAExI,GAAIb,OAMtD4J,CAAa5J,IASX6J,SACJ3I,GAAI8D,EAAKzO,KACT4K,UAAWwG,EVrES,WUqEqB,GACzC/F,aAAc,SAACgB,SVtEK,cU8DIxK,EAQcwK,EAAExK,QAP7B+I,WAA0B2G,GAAY,QAC7C1P,EAAO+I,YAAc8C,IAAY6D,GAAY,IAF1B,IAAC1P,GASxByJ,aAAc,kBAAMiG,GAAY,IAChC9F,QAAS,SAACY,UAAMgG,EAAeQ,EAAcxG,EAAExK,UAC5CmJ,OACHvI,IAAAA,IAGI8Q,MACJzP,aAAcW,EACd2M,iBAAAA,GACG3C,GAEC0D,EAAoB,CACxBrO,aAAcW,EACd8N,SAAUnE,EAAKjB,OAAO2F,GACtBT,eAAgB,kBAAMA,EAAeQ,YAIrCjM,uBAAUoE,EACRyG,IAAkBL,EAChBxK,gBAAC4L,GAAmBe,GACpB3M,gBAACoL,GAAoBG,IACrBvL,uBAAU0M,EAAgBlN,0kBAKlCwM,GAAS7F,YAAc,WAEvB6F,GAAS5F,UAAY,CACnBhC,WAAYiC,EAAUA,UAAUC,MAAM,YACxBD,EAAUE,SAExB/G,SAAU6G,EAAUG,OAAOC,WAC3B7D,OAAQyD,EAAUM,IAClBlE,KAAM4D,EAAUC,MAAM,CACpBuB,KAAMxB,EAAU1M,MAElBsK,SAAUoC,EAAUO,MCvGf,IAAMgG,GAAiBhQ,EAAOQ,4iBAErB,SAAAN,UAAUA,EAAMI,aAAe,UAAY,YA8BrD2P,GAAU7M,EAAMC,YAAW,SAACnD,EAAOjB,OAErCuI,EAMEtH,EANFsH,WACA5E,EAKE1C,EALF0C,SACqBiD,EAInB3F,EAJF0C,SAAY1C,MAAS2F,KACQoF,EAG3B/K,EAHF0C,SAAY1C,MAAS2F,KAAQoF,KAC7BiF,EAEEhQ,EAFFgQ,eACAC,EACEjQ,EADFiQ,6BAE4C3M,GAAS,YAAhD4M,OAAiBC,OAclBC,MACJzI,aAAc,kBAZdwI,GAAmB,GACnBF,GAA2B,QAC3BD,EAAerK,IAWfiC,aAAc,kBAPduI,GAAmB,GACnBF,GAA2B,QAC3BD,EAAe,MAMZ1I,GAGC+I,MACJpJ,GAAI8D,EAAKzO,KACT4K,UXpEmB,UWqEnBnI,IAAAA,GACGuI,GAGCgJ,EAAiB,CACrBpJ,UAAW,kBACX9G,aAAc8P,EACdvO,iBAAiB,UAIjBuB,uBAAUkN,EACRlN,gBAAC4M,GAAmBQ,EACfvF,EAAKwF,MAEVrN,uBAAUmN,EAAe3N,OAK/BqN,GAAQ1G,YAAc,UAEtB0G,GAAQzG,UAAY,CAClBhC,WAAYiC,EAAUA,UAAUC,MAAM,YACxBD,EAAUE,SAExB/G,SAAU6G,EAAUG,OAAOC,WAC3BsG,2BAA4B1G,EAAUK,KACtCoG,eAAgBzG,EAAUK,KAC1B9D,OAAQyD,EAAUM,IAClBlE,KAAM4D,EAAUC,MAAM,CACpBuB,KAAMxB,EAAU1M,MAElBsK,SAAUoC,EAAUO,MCpGtB,IAAM0G,GAAc,SAAdA,EAAe7K,EAAM8K,MACrBA,EAAQ9K,UACHA,KAGLA,EAAKjD,SAAU,KACbgO,EAAS,UACb/K,EAAKjD,SAASiO,SAAQ,SAAA5U,OACd2M,EAAI8H,EAAYzU,EAAG0U,GACrBpV,MAAME,QAAQmN,GAChBgI,EAASA,EAAOE,OAAOlI,GAEvBgI,EAAO9S,KAAK8K,MAGTgI,QAGF,sjDCwCF,IAaDG,GAAc,SAAC/K,EAAQgL,OACnBC,EAAyBjL,EAAzBiL,WAAYC,EAAalL,EAAbkL,SACZC,EAAqCH,EAArCG,gBAAiBC,EAAoBJ,EAApBI,uBAEzBpL,EAAOqL,kBAAoB,eAACC,yDAAWtL,EAAO0E,YAChBtE,EAAOmL,MACjCvL,EACA,CAAEwL,MAAO,SAAAvV,UAAKA,EAAEuD,OAASyK,IAAQnD,GAAIwK,aAFhCG,cAIAA,GAGTzL,EAAO0L,eAAiB,eAACJ,yDAAWtL,EAAO0E,kBAAgB1E,EAAOqL,kBAAkBC,IAEpFtL,EAAOkL,SAAW,cAChBA,IACIlL,EAAO0L,iBAAkB,OACA1L,EAAOqL,6BAA3BM,OAAY1L,SACAG,EAAOmL,MAAMvL,EAAQ,CAAEwL,MAAO,SAAAvV,UAAKA,EAAEuD,OAAS0K,MAA1D0H,eAIHA,GAAYA,EAAS,GAAG3G,MAAQ2G,EAAS,GAAG3G,KAAKzO,aAC7CqV,EAAeD,EAAS,GAAG3G,KAAKzO,KAChCsV,EAAmB1L,EAAOmL,MAAMvL,EAAQ,CAAEwL,MAAO,SAAAvV,UAAKA,EAAEuD,OAAS0K,IAClEjO,EAAEgP,KAAKzO,OAASqV,GACrB/K,GAAIb,IACA2K,EAASkB,EAAiBlU,wBAEtBmU,EAAQnB,EAAO3T,UAChB+U,EAAKC,OAAOF,EAAM,GAAIH,EAAS,KACfhH,EAAKjB,OAAOoI,EAAM,MACfnH,EAAKjB,OAAOiI,EAAS,IACT,KAC1BM,EAAUC,KAAKC,MAAMD,KAAKE,UAAUT,EAAS,KACnDU,EAAcC,cAAcvM,GAAQ,WAClCI,EAAO+H,mBAAmBnI,GAAQ,WAChCY,EAAWwH,YAAYpI,EAAQ,CAAEc,GAAIiL,EAAM,KAC3CnL,EAAWyH,YAAYrI,EAAQkM,EAAS,CAAEpL,GAAIiL,EAAM,WAK5DnB,EAASkB,EAAiBlU,SAfpBgT,EAAO/S,UAmBbsT,GACFA,EAAgBQ,GAAYa,MAAK,gBAAG3M,IAAAA,KAAM4M,IAAAA,UAAWtS,IAAAA,SACjC,iBAAdsS,EACF7L,EAAWwH,YAAYpI,EAAQ,CAAEc,GAAIb,IACrCW,EAAWyH,YAAYrI,EAAQH,EAAM,CAAEiB,GAAIb,SACtC,GAAkB,oBAAdwM,GAGLb,GAAYA,EAAS,GAAG3G,MAAQ2G,EAAS,GAAG3G,KAAKzO,aAC7CqV,EAAeD,EAAS,GAAG3G,KAAKzO,KAChCkW,EAAmBtM,EAAOmL,MAAMvL,EAAQ,CAAEwL,MAAO,SAAAvV,SblI9C,YakImDA,EAAEuD,MACvDvD,EAAEgP,KAAK0H,aAAaC,SAASf,IACpC/K,GAAIb,IACA2K,EAAS8B,EAAiB9U,wBAEtBiV,EAAejC,EAAO3T,MACtB6V,EA3HK,SAACnB,EAAYoB,OAChCC,EAAWtC,GAAYiB,GAAY,SAAC1V,SbdrB,Yac2BA,EAAEuD,MAC7CvD,EAAEgP,KAAKzO,OAASuW,EAAO9H,KAAKzO,eAC1BwW,GAAYA,EAAS5X,OAAS,EAAI4X,EAAS,GAAK,KAwHtBC,CAAYpN,EAAMgN,EAAa,OAC9CC,EAAY,KACRI,EAAkBtI,EAAKjB,OAAOkJ,EAAa,IACzBjI,EAAKjB,OAAOmJ,KACZI,GACtBZ,EAAcC,cAAcvM,GAAQ,WAClCI,EAAO+H,mBAAmBnI,GAAQ,WAChCY,EAAWwH,YAAYpI,EAAQ,CAAEc,GAAI+L,EAAa,KAClDjM,EAAWyH,YAAYrI,EAAQ8M,EAAY,CAAEhM,GAAI+L,EAAa,WAKtEjC,EAAS8B,EAAiB9U,SAfpBgT,EAAO/S,UAqBnByU,EAAcC,cAAcvM,GAAQ,WAClCY,EAAWuM,SAASnN,EAAQ,CAAE7F,QAASA,GAAS,CAAE2G,GAAIb,YAOhED,EAAOiL,WAAa,SAAChG,OACbmI,EAAWnI,EAAKoI,QAAQ,gBAC1BD,UAEME,EAAyB,GACzBC,EAAkB,IAAIC,EACtBC,EAAmB,IAAIC,EAcvBC,EAAgB,CACpB/J,OAAQ,QACRzK,SAAU,CACRyK,OAAQ,WACRqB,KAAM,GACNrI,SAjBc6Q,EACfG,eAAeL,EAAgBM,aAAaT,IAEVjU,SAASyD,SAASkR,KACrD,SAACC,UACKA,EAAMvU,OAASyK,KACjB8J,EAAM9I,KAAK+I,SAAWC,IACtBX,EAAuBxV,KAAKiW,IAEvBA,OAYXT,EAAuBzC,SAAQ,SAACqD,GAC9B9C,EAAgB8C,EAAOjJ,KAAK+I,SAAUE,EAAOjJ,KAAK/D,KAClDiK,EAAgB+C,GAAQ,UAGpBC,EAAeZ,EAClBa,OAAOX,EAAiBI,aAAaF,gBAExC1C,EAAW,CACToC,QAAS,SAAAgB,SAAsB,cAAXA,EAChBF,EACAlJ,EAAKoI,QAAQ,iBAGnB,MAAOtV,GAAOuW,QAAQnU,MAAMpC,GAEhCkT,EAAWhG,IAGbjF,EAAOuO,kBAAoB,SAAC5C,UA3L9B,SAAS6C,EAAWC,EAAQ7R,GAE1BA,EAASiO,SAAQ,SAACkD,OACVW,EAAYX,EAAMvU,YAChBuU,EAAMnK,YACP,4BAIK8K,OACD,cACA,aACCX,EAAM9I,KAAK0J,OAASzK,SAChB,IAAI0K,MAAM,kCACZH,EAAOI,MAAQ,QACb,IAAID,MAAM,6BAGhBH,EAAOI,OAAS,GAQtBd,EAAMnR,UACR4R,EAAWC,EAAQV,EAAMnR,UAGT,YAAd8R,GAAyC,YAAdA,IAC7BD,EAAOI,OAAS,MAoKlBL,CAPe,CAAEK,MAAO,GAEpBlD,EAAWxS,SACFwS,EAAWxS,SAASyD,SAEpB,CAAC+O,KAGP,GAGT3L,EAAO8O,aAAe,kBAEhB9O,EAAO0E,WAAmB1E,EAAO0E,UAAUhE,OAAOT,KAAK7K,QAAU,GAKhE4K,GCpOH+O,GAAgB,SAAC/O,OACbgP,EAAyBhP,EAAzBgP,WAAYzK,EAAavE,EAAbuE,gBACpBvE,EAAOgP,WAAa,SAAChS,OACbiS,EAAW7O,EAAOxI,KAAKoI,EAAQ,CACnCc,GAAId,EAAO0E,UAAU/D,MAAMV,OAEvBiP,EAAetK,EAAKC,OAAO7E,EAAQA,EAAO0E,UAAU/D,MAAMV,MAC1DkP,EAAavK,EAAKwK,IAAIpP,EAAQA,EAAO0E,UAAU/D,MAAMV,MAAMjD,KAC9D5H,OACGia,EAAgBJ,EAClBnK,GAAmBmK,EAAS,IAC5B,KACEK,EAAiBJ,EACnBpK,GAAmBoK,GACnB,KAIFD,GACAA,EAAS,GAAGzV,OAAS0K,IACrBiL,IAAenP,EAAO0E,UAAU/D,MAAM4O,SAEtC3O,EAAW4O,OAAOxP,EAAQiP,EAAS,IACnCrO,EAAW6O,SAASzP,EAAQ,CAAE0P,KAAM,WAMlC9K,EAAKC,OAAO7E,EAAQA,EAAO0E,UAAU/D,MAAMV,MAAMzG,OAAS0K,KACzC,IAAjBmL,QAAuC9J,IAAb0J,IACT,IAAnBK,EAIA1K,EAAKC,OAAO7E,EAAQA,EAAO0E,UAAU/D,MAAMV,MAAMzG,OAAS0K,IAE1D8K,EAAWhS,GAJX4D,EAAWoO,WAAWhP,EAAQhD,IAQlCgD,EAAOuE,SAAW,SAACC,UACjBA,EAAQhL,OAAS0K,IAAkBK,EAASC,IACvCxE,GAII2P,GAAqB,SAACC,EAAU5P,EAAQL,OAC9CiQ,IAAa5P,EAAO0L,iBAAkB,OAAO,MAC1ChH,EAAc1E,EAAd0E,UACFyK,EAAavK,EAAKwK,IAAIpP,EAAQA,EAAO0E,UAAU/D,MAAMV,MAAMjD,KAAK5H,OAEhEya,EAAWpL,GAAWzE,KZpCI,SAACA,MAC7ByE,GAAWzE,GAAS,KAChB+E,EAAeH,EAAKC,OAAO7E,EAAQA,EAAO0E,UAAU/D,MAAMV,aACzD6E,GAAmBC,UAErB,EY+BiC+K,CAAmB9P,MACvD6P,EAAU,IAFA,SAAA7P,UAAUmP,IAAenP,EAAO0E,UAAU/D,MAAM4O,OAGxDQ,CAAM/P,IAA+B,yBAApBL,EAAMqQ,iBAClB,KAEe,0BAApBrQ,EAAMqQ,iBAGDtL,EAAUhE,OAAO6O,OAAS,KAGX,oBAApB5P,EAAMqQ,WACa,oBAApBrQ,EAAMqQ,WACc,oBAApBrQ,EAAMqQ,iBACA,MAGLf,EAAW7O,EAAOxI,KAAKoI,EAAQ,CAAEc,GAAId,EAAO0E,UAAU/D,MAAMV,cAE9DgP,GAAYA,EAAS,GAAGzV,OAAS0K,IAAYiL,IAAenP,EAAO0E,UAAU/D,MAAM4O,OAC7D,0BAApB5P,EAAMqQ,UAKLH,0vCCxCT,IAOMI,GAAgB,CACpBhZ,MAAO,CACL2M,OAAQ,QACRzK,SAAU,CACRyK,OAAQ,WACRqB,KAAM,GACNsG,MAAO,CAAC,CACN3H,OAAQ,QACRpK,KAAM,YACNyL,KAAM,GACNsG,MAAO,CAAC,CACN3H,OAAQ,OACR5G,KAAM,0CACNkT,MAAO,SAKfhF,SAzBiB,SAACjU,GAClBkZ,aAAaC,QAAQ,kBAAmBnZ,EAAMoZ,WAyB9CC,QAAS,IASLC,GAAiB,SAACrW,SACwCsD,GAAS,YAAhEgT,OAAyBrG,SACM3M,EAAS,eAAxCiT,OAAavG,OACdc,EAAmB,CACvBG,gBAAiBjR,EAAMiR,gBACvBC,gBAAiBlR,EAAMkR,iBAGnBxF,EAAsB8K,GAAY,SAAC1Q,EAAQ+E,OAC3C4L,EACAC,GAA8B,MAC7BJ,IAA4BC,EAAa,OAAOG,QAC/CC,EAAc/Q,EAAYI,SAASF,EAAQyQ,GAC3CK,EAAehR,EAAYI,SAASF,EAAQ+E,QAEhCH,EAAK8E,UAAU1J,EAAQ6Q,EAAa,CAAElH,SAAS,oCAAS,KAA9D1T,kBACNA,EAAEuD,OAASyK,KAAU0M,EAAoB1a,EAAEgP,KAAKzO,gDAGpCoO,EAAK8E,UAAU1J,EAAQ8Q,EAAc,CAAEnH,SAAS,oCAAS,KAA/D1T,kBAERA,EAAEuD,OAASyK,IACRhO,EAAEgP,KAAKzO,OAASma,GAChBF,EAAYxL,KAAK0H,aAAaC,SAAS7H,EAAaE,KAAKzO,QAE5Doa,GAA8B,yCAG3BA,IACN,CAACJ,EAAyBC,2BAmK1BM,GACCC,cAtHkB,SAAAhR,UACpB9F,EAAM8W,cACF9W,EAAM8W,cAAcjC,GAAchE,GAAY1G,GAAiBrE,GAASgL,KACxE+D,GAAchE,GAAY1G,GAAiBrE,GAASgL,KAoHtDiG,WAjHe,SAACjR,EAAQL,MACtBK,EAAO0L,iBAAkB,OACN1L,EAAOqL,wBACM,cAAnBpG,KAAKiM,UAAqB,OAAO,SFlGtB,SAAClR,EAAQL,MAEjB,yBAApBA,EAAMqQ,WACHpL,EAAKwK,IAAIpP,EAAQA,EAAO0E,UAAU/D,MAAMV,MAAMjD,KAAK5H,SAAW4K,EAAO0E,UAAU/D,MAAM4O,OACxF,OACgBnP,EACbmL,MAAMvL,EAAQ,CAAEc,GAAIV,EAAOxI,KAAKoI,GAAQ,GAAIwL,MAAO,SAAAvV,UAAKA,EAAEuD,OAASyK,8BAGjE,EE2FEkN,CAAiBnR,EAAQL,IAAUgQ,GAAmBzV,EAAM0V,SAAU5P,EAAQL,IA6GnF1I,MAAOiD,EAAMjD,OAASgZ,GAAchZ,MACpCiU,SAAUhR,EAAMgR,UAAY+E,GAAc/E,SAC1CkG,eAtKmB,SAAC5P,EAAY5E,EAAU4H,EAASxE,SAC/CqR,EAAe,CACnBnT,YAAcsG,EAAQS,MAAQT,EAAQS,KAAK/D,IAAOsD,EAAQS,KAAK/D,IAAM,GACrE1K,KAAOgO,EAAQS,MAAQT,EAAQS,KAAKzO,KAAQgO,EAAQS,KAAKzO,KAAO,GAChE2D,MAAOqK,EAAQrK,MACfmD,YAAapD,EAAMoD,YACnB+D,SAAUnH,EAAMmH,SAChBmP,wBAAAA,EACAhP,WAAAA,EACAxB,OAAAA,GAEIgG,qWACJxB,QAAAA,EACAxE,OAAAA,EACA4F,oBAAAA,GACGpE,GAEC8P,EAAoB,CACxBjQ,SAAUnH,EAAMmH,SAChBG,WAAAA,GAEI+P,EAAgB,CACpB/a,KAAOgO,EAAQS,MAAQT,EAAQS,KAAKzO,KAAQgO,EAAQS,KAAKzO,KAAO,GAChE4K,UfhIiB,UeiIjB+I,2BAAAA,EACAD,eAAAA,EACA1I,WAAAA,EACAxB,OAAAA,GAEIwR,EAAiB,CACrBnQ,SAAUnH,EAAMmH,SAChBG,WAAAA,iBAGCyC,IAAS,kBAAO7G,gBAACD,GAAoBkU,EAAezU,UACpDsH,IAAW,kBAAO9G,gBAACuI,GAAaK,EAAiBpJ,Uf9I7B,ee+IN,kBAAOQ,gBAACyK,GAAgByJ,EAAoB1U,Uf7I1C,We8IN,kBAAOQ,gBAAC6M,GAAYsH,EAAgB3U,Uf/I7B,YegJN,kBAAOQ,gBAACgM,GAAaoI,EAAiB5U,SAiIlDgT,SAAU1V,EAAM0V,SAChBvO,SAAUnH,EAAMmH,SAChBoQ,eAAgB,SAAAzR,UAAW9F,EAAM0V,WAAa5P,EAAO0L,kBACrDgG,QAhHY,SAAA1R,WACdA,EAAO0L,eAAe1L,EAAO0E,UAAUhE,SACpCV,EAAO0L,eAAe1L,EAAO0E,UAAU/D,SA+GxCgR,WA5Ge,SAAC3R,EAAQL,MAEc,KAArCA,EAAMiS,SAAWjS,EAAMkS,WACrBC,EAAM7F,OAAO7L,EAAO2R,MAAM/R,EAAQA,EAAO0E,UAAUhE,OAAOT,MAAOD,EAAO0E,UAAUhE,QACrF,OACgBN,EACbmL,MAAMvL,EAAQ,CAAEc,GAAIV,EAAO4R,SAAShS,GAAQ,GAAIwL,MAAO,SAAAvV,UAAKA,EAAEuD,OAASyK,8BAGrE,GAoGLgO,YAjGgB,SAACjS,EAAQL,GAC3BA,EAAMuS,sBACArS,EAAOC,EAAYC,YAAYC,EAAQL,EAAMtH,QAC7C4H,EAAOH,EAAYI,SAASF,EAAQH,GACpCM,EAAQC,EAAOD,MAAMH,EAAQC,GACnCN,EAAMwS,aAAaC,QAAQ,OAAQjG,KAAKE,UAAUlM,KA6FhDkS,WA1Fe,SAACrS,EAAQL,GAC1BA,EAAMuS,kBACNvS,EAAMwS,aAAaG,WAAa,QAyF9BC,OArFW,SAACvS,EAAQL,GACtBA,EAAM6S,qBACAC,EAAc3S,EAAY4S,eAAe1S,EAAQL,KAC9BS,EACtBmL,MAAMvL,EAAQ,CAAEwL,MAAO,SAAAvV,UAAKA,EAAEuD,OAASyK,IAAQnD,GAAI2R,iBAClC,OAAO,MACrBE,EAAcxG,KAAKC,MAAMzM,EAAMwS,aAAa9E,QAAQ,SACpD5B,EAAoBzL,EAAOqL,kBAAkBsH,OAC9ClH,EAAmB,OAAO,MACzB5L,EAAOC,EAAYC,YAAYC,EAAQL,EAAMtH,QAC7C4H,EAAOH,EAAYI,SAASF,EAAQH,GACpC0L,IAAY3G,EAAK8E,UAAU1J,EAAQC,EAAM,CAAE0J,SAAS,KAEpDiJ,EAAoBrH,EAAMnW,OAAS,EAAImW,EAAM,GAAG,GAAG/R,KAAO,QACvC,YAAtBoZ,GAAyD,YAAtBA,EAAgC,KAE9DC,EAAgBtH,EAAM,GAAG,GACzBuH,EAAoBhT,EAAYI,SAASF,EAAQ6S,GACxCtH,EAAM,GAAG,GAAG3O,SAASxH,OAIxB,EAFWmW,EAAM,GAAG,GAAG,GAG9BE,EAAkB,GAAKqH,EAAkB,GAC1ClS,EAAWC,UAAUb,EAAQ,CAAEc,GAAI2K,EAAkB,GAAI1K,GAAI+R,IAE7DlS,EAAWC,UAAUb,EAAQ,CAAEc,GAAI2K,EAAkB,GAAI1K,GAAI,CAAC+R,EAAkB,GAAK,KAGpFrH,EAAkB,GAAKqH,EAAkB,GAC1ClS,EAAWC,UAAUb,EAAQ,CAAEc,GAAI2K,EAAkB,GAAI1K,GAAI,CAAC+R,EAAkB,GAAK,KAErFlS,EAAWC,UAAUb,EAAQ,CAAEc,GAAI2K,EAAkB,GAAI1K,GAAI+R,QAG9D,KAECC,EAAsBxH,EAAM,GAE5ByH,EAAeD,EAAsBA,EAAoB,GAAK9S,EAChE+S,EAAa5d,OACfwL,EAAW4O,OAAOxP,EAAQgT,GAG1BpS,EAAW4O,OAAOxP,EAAQyS,OAGxB/C,EAAO,SAEPsD,IAAiB/S,GAAqB,IAAZA,EAAK,IAAYA,EAAK,KAAO+S,EAAa,GAAK,KACrEC,EAAWrO,EAAKwK,IAAIpP,EAAQyS,EAAY9R,MAAMV,MAAMjD,KAAK5H,OAAS,EACpEqd,EAAY9R,MAAM4O,OAAS0D,IAC7BvD,EAAO,aAEJ,KAECwD,EAAWC,EAAIvO,EAAKhI,SAASoD,EAAQgT,IAAe5d,OAAS,EAC/D6K,EAAK,GAAKiT,IACZxD,EAAO,SAGX9O,EAAW6O,SAASzP,EAAQ,CAAE0P,KAAAA,IAC9B9O,EAAWwH,YAAYpI,EAAQ,CAAEc,GAAI6R,EAAYjS,OAAOT,KAAMuL,MAAO,SAAAvV,UAAKA,EAAEuD,OAASyK,MACrFrD,EAAWyH,YAAYrI,EAAQyL,EAAkB,WAE1C,GAqBL2H,aAAclZ,EAAMkZ,2BACR,YAUlB7C,GAAe/M,UAAY,CACzB4P,aAAc3P,EAAUG,OACxBoN,cAAevN,EAAUK,KACzB7M,MAAOwM,EAAU4P,MACjBnI,SAAUzH,EAAUK,KACpB8L,SAAUnM,EAAUO,KACpB3C,SAAUoC,EAAUO,KACpBoH,gBAAiB3H,EAAUK,KAC3BwP,UAAW7P,EAAUG,OACrBtG,YAAamG,EAAUC,MAAM,CAC3BL,uBAAwBI,EAAUK,KAClCX,qBAAsBM,EAAUK,KAChCf,qBAAsBU,EAAUK,OAElCqH,gBAAiB1H,EAAUK,KAC3ByP,aAAc9P,EAAUK,KACxBwM,QAAS7M,EAAU+P,QAAQ/P,EAAUC,MAAM,CACzC+P,QAAShQ,EAAUK,KACnB4P,UAAWjQ,EAAUK,KACrBtN,KAAMiN,EAAUE,OAAOE,WACvB8P,cAAelQ,EAAUK"}